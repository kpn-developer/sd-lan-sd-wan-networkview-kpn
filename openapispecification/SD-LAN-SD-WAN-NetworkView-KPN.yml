openapi: 3.0.0
info:
  version: 1.0.0
  title: KPN SD-LAN SD-WAN Network View API
  description: >-
    The SD-LAN SD-WAN Network View API is a modern REST API based on the OpenAPI specification.
        
    The Network View API gives users read rights to retrieve information from the `Network View API` resources. 
    
    Allowed methods: `GET`
   
    ---

    ## [KPN Developer](https://developer.kpn.com/)<br/>
    [Getting Started](https://developer.kpn.com/getting-started)


      ---
      
servers:
  - url: "https://api-prd.kpn.com/kpn/meraki"
    variables: {}
externalDocs:
  description: HTTP response headers
  url: https://developer.kpn.com/documentation-response-headers

    
paths:
  "/networks/{networkId}/bluetoothClients":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Bluetooth clients
      summary: getNetworkBluetoothClients
      description: Lists the Bluetooth clients seen by APs in this networks.
      operationId: getNetworkBluetoothClients
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: t0
          in: query
          description: The beginning of the timespan for the data. The maximum lookback period is 7 days from today.
          style: form
          explode: true
          schema:
            type: string
        - name: timespan
          in: query
          description: "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 7 days. The default is 1 day."
          style: form
          explode: true
          schema:
            type: number
            format: double
        - name: perPage
          in: query
          description: The number of entries per page returned. Acceptable range is 5 - 1000. Default is 10.
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: startingAfter
          in: query
          description: "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          style: form
          explode: true
          schema:
            type: string
        - name: endingBefore
          in: query
          description: "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          style: form
          explode: true
          schema:
            type: string
        - name: includeConnectivityHistory
          in: query
          description: Include the connectivity history for this client
          style: form
          explode: true
          schema:
            type: boolean
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "id": "1284392014819",

                      "mac": "22:33:44:55:66:77",

                      "networkId": "N_24329156",

                      "name": "Miles's phone",

                      "deviceName": "Bose QuietComfort 35",

                      "manufacturer": "Bose",

                      "lastSeen": 1526087474,

                      "seenByDeviceMac": "00:11:22:33:44:55",

                      "inSightAlert": false,

                      "outOfSightAlert": false,

                      "tags": [

                        "tag1",

                        "tag2"

                      ]

                    }

                  ]
              example: |-
                [

                  {

                    "id": "1284392014819",

                    "mac": "22:33:44:55:66:77",

                    "networkId": "N_24329156",

                    "name": "Miles's phone",

                    "deviceName": "Bose QuietComfort 35",

                    "manufacturer": "Bose",

                    "lastSeen": 1526087474,

                    "seenByDeviceMac": "00:11:22:33:44:55",

                    "inSightAlert": false,

                    "outOfSightAlert": false,

                    "tags": [

                      "tag1",

                      "tag2"

                    ]

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/bluetoothClients/{bluetoothClientId}":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Bluetooth clients
      summary: getNetworkBluetoothClient
      description: Returns a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC.
      operationId: getNetworkBluetoothClient
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: bluetoothClientId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: includeConnectivityHistory
          in: query
          description: Include the connectivity history for this client
          style: form
          explode: true
          schema:
            type: boolean
        - name: connectivityHistoryTimespan
          in: query
          description: "The timespan, in seconds, for the connectivityHistory data. By default 1 day, 86400, will be used."
          style: form
          explode: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "id": "1284392014819",

                    "mac": "22:33:44:55:66:77",

                    "networkId": "N_24329156",

                    "name": "Miles's phone",

                    "deviceName": "Bose QuietComfort 35",

                    "manufacturer": "Bose",

                    "lastSeen": 1526087474,

                    "seenByDeviceMac": "00:11:22:33:44:55",

                    "inSightAlert": false,

                    "outOfSightAlert": false,

                    "tags": [

                      "tag1",

                      "tag2"

                    ]

                  }
              example: |-
                {

                  "id": "1284392014819",

                  "mac": "22:33:44:55:66:77",

                  "networkId": "N_24329156",

                  "name": "Miles's phone",

                  "deviceName": "Bose QuietComfort 35",

                  "manufacturer": "Bose",

                  "lastSeen": 1526087474,

                  "seenByDeviceMac": "00:11:22:33:44:55",

                  "inSightAlert": false,

                  "outOfSightAlert": false,

                  "tags": [

                    "tag1",

                    "tag2"

                  ]

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/bluetoothSettings":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Bluetooth settings
      summary: getNetworkBluetoothSettings
      description: 'Returns the Bluetooth settings for a network. <a href="https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)">Bluetooth settings</a> must be enabled on the network.'
      operationId: getNetworkBluetoothSettings
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "scanningEnabled": true,

                    "advertisingEnabled": true,

                    "uuid": "00000000-0000-0000-000-000000000000",

                    "majorMinorAssignmentMode": "Non-unique",

                    "major": 1

                  }
              example: |-
                {

                  "scanningEnabled": true,

                  "advertisingEnabled": true,

                  "uuid": "00000000-0000-0000-000-000000000000",

                  "majorMinorAssignmentMode": "Non-unique",

                  "major": 1

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  ? "/networks/{networkId}/camera/qualityRetentionProfiles/{qualityRetentionProfileId}"
  : 
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Camera quality retention profiles
      summary: getNetworkCameraQualityRetentionProfile
      description: Retrieve a single quality retention profile.
      operationId: getNetworkCameraQualityRetentionProfile
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: qualityRetentionProfileId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "id": "1234",

                    "networkId": "N_24329156",

                    "name": "Sample quality retention profile",

                    "restrictedBandwidthModeEnabled": true,

                    "motionBasedRetentionEnabled": false,

                    "audioRecordingEnabled": false,

                    "cloudArchiveEnabled": false,

                    "maxRetentionDays": 7,

                    "scheduleId": null,

                    "motionDetectorVersion": 2,

                    "videoSettings": {

                      "MV32": {

                        "quality": "Enhanced",

                        "resolution": "1080x1080"

                      },

                      "MV21/MV71": {

                        "quality": "High",

                        "resolution": "1280x720"

                      },

                      "MV12/MV22/MV72": {

                        "quality": "High",

                        "resolution": "1920x1080"

                      },

                      "MV12WE": {

                        "quality": "High",

                        "resolution": "1920x1080"

                      }

                    }

                  }
              example: |-
                {

                  "id": "1234",

                  "networkId": "N_24329156",

                  "name": "Sample quality retention profile",

                  "restrictedBandwidthModeEnabled": true,

                  "motionBasedRetentionEnabled": false,

                  "audioRecordingEnabled": false,

                  "cloudArchiveEnabled": false,

                  "maxRetentionDays": 7,

                  "scheduleId": null,

                  "motionDetectorVersion": 2,

                  "videoSettings": {

                    "MV32": {

                      "quality": "Enhanced",

                      "resolution": "1080x1080"

                    },

                    "MV21/MV71": {

                      "quality": "High",

                      "resolution": "1280x720"

                    },

                    "MV12/MV22/MV72": {

                      "quality": "High",

                      "resolution": "1920x1080"

                    },

                    "MV12WE": {

                      "quality": "High",

                      "resolution": "1920x1080"

                    }

                  }

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/camera/qualityRetentionProfiles":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Camera quality retention profiles
      summary: getNetworkCameraQualityRetentionProfiles
      description: List the quality retention profiles for this network.
      operationId: getNetworkCameraQualityRetentionProfiles
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "id": "1234",

                      "networkId": "N_24329156",

                      "name": "Sample quality retention profile",

                      "restrictedBandwidthModeEnabled": true,

                      "motionBasedRetentionEnabled": false,

                      "audioRecordingEnabled": false,

                      "cloudArchiveEnabled": false,

                      "maxRetentionDays": 7,

                      "scheduleId": null,

                      "motionDetectorVersion": 2,

                      "videoSettings": {

                        "MV32": {

                          "quality": "Enhanced",

                          "resolution": "1080x1080"

                        },

                        "MV21/MV71": {

                          "quality": "High",

                          "resolution": "1280x720"

                        },

                        "MV12/MV22/MV72": {

                          "quality": "High",

                          "resolution": "1920x1080"

                        },

                        "MV12WE": {

                          "quality": "High",

                          "resolution": "1920x1080"

                        }

                      }

                    }

                  ]
              example: |-
                [

                  {

                    "id": "1234",

                    "networkId": "N_24329156",

                    "name": "Sample quality retention profile",

                    "restrictedBandwidthModeEnabled": true,

                    "motionBasedRetentionEnabled": false,

                    "audioRecordingEnabled": false,

                    "cloudArchiveEnabled": false,

                    "maxRetentionDays": 7,

                    "scheduleId": null,

                    "motionDetectorVersion": 2,

                    "videoSettings": {

                      "MV32": {

                        "quality": "Enhanced",

                        "resolution": "1080x1080"

                      },

                      "MV21/MV71": {

                        "quality": "High",

                        "resolution": "1280x720"

                      },

                      "MV12/MV22/MV72": {

                        "quality": "High",

                        "resolution": "1920x1080"

                      },

                      "MV12WE": {

                        "quality": "High",

                        "resolution": "1920x1080"

                      }

                    }

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/devices/{serial}/camera/qualityAndRetentionSettings":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Cameras
      summary: getDeviceCameraQualityAndRetentionSettings
      description: Returns quality and retention settings for the given camera.
      operationId: getDeviceCameraQualityAndRetentionSettings
      parameters:
        - name: serial
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "motionBasedRetentionEnabled": false,

                    "audioRecordingEnabled": false,

                    "restrictedBandwidthModeEnabled": false,

                    "profileId": null,

                    "quality": "Standard",

                    "motionDetectorVersion": 2,

                    "resolution": 720

                  }
              example: |-
                {

                  "motionBasedRetentionEnabled": false,

                  "audioRecordingEnabled": false,

                  "restrictedBandwidthModeEnabled": false,

                  "profileId": null,

                  "quality": "Standard",

                  "motionDetectorVersion": 2,

                  "resolution": 720

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/cameras/{serial}/videoLink":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Cameras
      summary: getNetworkCameraVideoLink
      description: "Returns video link to the specified camera. If a timestamp is supplied, it links to that timestamp."
      operationId: getNetworkCameraVideoLink
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: serial
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: timestamp
          in: query
          description: "[optional] The video link will start at this timestamp. The timestamp is in UNIX Epoch time (milliseconds). If no timestamp is specified, we will assume current time."
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "url": "https://nxx.meraki.com/office-cameras/n/bs0a1k/manage/nodes/new_list/29048243992402?timestamp=1535732570077"

                  }
              example: |-
                {

                  "url": "https://nxx.meraki.com/office-cameras/n/bs0a1k/manage/nodes/new_list/29048243992402?timestamp=1535732570077"

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/camera/schedules":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Cameras
      summary: getNetworkCameraSchedules
      description: Returns a list of all camera recording schedules.
      operationId: getNetworkCameraSchedules
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "id": "123",

                      "name": "Weekday schedule"

                    },

                    {

                      "id": "124",

                      "name": "Office hours"

                    }

                  ]
              example: |-
                [

                  {

                    "id": "123",

                    "name": "Weekday schedule"

                  },

                  {

                    "id": "124",

                    "name": "Office hours"

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/clients/{clientId}/events":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Clients
      summary: getNetworkClientEvents
      description: Returns the events associated with this client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.
      operationId: getNetworkClientEvents
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: clientId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: perPage
          in: query
          description: The number of entries per page returned. Acceptable range is 3 - 100. Default is 100.
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: startingAfter
          in: query
          description: "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          style: form
          explode: true
          schema:
            type: string
        - name: endingBefore
          in: query
          description: "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "deviceSerial": "Q234-ABCD-5678",

                      "occurredAt": 1518365681,

                      "type": "l3roaming_assoc_start",

                      "details": {

                        "vap": "1",

                        "on_packet": "true"

                      }

                    }

                  ]
              example: |-
                [

                  {

                    "deviceSerial": "Q234-ABCD-5678",

                    "occurredAt": 1518365681,

                    "type": "l3roaming_assoc_start",

                    "details": {

                      "vap": "1",

                      "on_packet": "true"

                    }

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/devices/{serial}/clients":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"  
    get:
      tags:
        - Clients
      summary: getDeviceClients
      description: "Lists the clients of a device, up to a maximum of a month ago. The usage of each client is returned in kilobytes. If the device is a switch, the switchport is returned; otherwise the switchport field is null."
      operationId: getDeviceClients
      parameters:
        - name: serial
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: t0
          in: query
          description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
          style: form
          explode: true
          schema:
            type: string
        - name: timespan
          in: query
          description: "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
          style: form
          explode: true
          schema:
            type: number
            format: double
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "usage": {

                        "sent": 138,

                        "recv": 61

                      },

                      "id": "k74272e",

                      "description": "Miles's phone",

                      "mac": "22:33:44:55:66:77",

                      "ip": "1.2.3.4",

                      "user": "milesmeraki",

                      "vlan": 255,

                      "switchport": null,

                      "mdnsName": "Miles's phone",

                      "dhcpHostname": "MilesPhone"

                    }

                  ]
              example: |-
                [

                  {

                    "usage": {

                      "sent": 138,

                      "recv": 61

                    },

                    "id": "k74272e",

                    "description": "Miles's phone",

                    "mac": "22:33:44:55:66:77",

                    "ip": "1.2.3.4",

                    "user": "milesmeraki",

                    "vlan": 255,

                    "switchport": null,

                    "mdnsName": "Miles's phone",

                    "dhcpHostname": "MilesPhone"

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/clients/{clientId}/splashAuthorizationStatus":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Clients
      summary: getNetworkClientSplashAuthorizationStatus
      description: "Returns the splash authorization for a client, for each SSID they've associated with through splash. Only enabled SSIDs with Click-through splash enabled will be included. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
      operationId: getNetworkClientSplashAuthorizationStatus
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: clientId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "ssids": {

                      "0": {

                        "isAuthorized": true,

                        "authorizedAt": "2017-07-19 16:24:13 UTC",

                        "expiresAt": "2017-07-20 16:24:13 UTC"

                      },

                      "2": {

                        "isAuthorized": false

                      }

                    }

                  }
              example: |-
                {

                  "ssids": {

                    "0": {

                      "isAuthorized": true,

                      "authorizedAt": "2017-07-19 16:24:13 UTC",

                      "expiresAt": "2017-07-20 16:24:13 UTC"

                    },

                    "2": {

                      "isAuthorized": false

                    }

                  }

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/clients/{clientId}/usageHistory":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Clients
      summary: getNetworkClientUsageHistory
      description: "Returns the client's daily usage history. Usage data is in kilobytes. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
      operationId: getNetworkClientUsageHistory
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: clientId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "sent": 500,

                      "received": 680,

                      "ts": 1518365681

                    }

                  ]
              example: |-
                [

                  {

                    "sent": 500,

                    "received": 680,

                    "ts": 1518365681

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/clients/{clientId}":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Clients
      summary: getNetworkClient
      description: Returns the client associated with the given identifier. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.
      operationId: getNetworkClient
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: clientId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "id": "k74272e",

                    "description": "Miles's phone",

                    "mac": "22:33:44:55:66:77",

                    "ip": "1.2.3.4",

                    "user": "null",

                    "vlan": "255",

                    "switchport": null,

                    "ip6": "",

                    "firstSeen": 1518365681,

                    "lastSeen": 1526087474,

                    "manufacturer": "Apple",

                    "os": "iOS",

                    "ssid": "My SSID",

                    "wirelessCapabilities": "802.11ac - 2.4 and 5 GHz",

                    "smInstalled": true,

                    "recentDeviceMac": "00:11:22:33:44:55",

                    "clientVpnConnections": [

                      {

                        "remoteIp": "1.2.3.4",

                        "connectedAt": 1522613355,

                        "disconnectedAt": 1522613360

                      }

                    ],

                    "lldp": [

                      [

                        "System name",

                        "Some system name"

                      ],

                      [

                        "System description",

                        "Some system description"

                      ],

                      [

                        "Port ID",

                        "1"

                      ],

                      [

                        "Chassis ID",

                        "00:18:0a:00:00:00"

                      ],

                      [

                        "Port description",

                        "eth0"

                      ],

                      [

                        "System capabilities",

                        "Two-port MAC Relay"

                      ]

                    ],

                    "cdp": null,

                    "status": "Online"

                  }
              example: |-
                {

                  "id": "k74272e",

                  "description": "Miles's phone",

                  "mac": "22:33:44:55:66:77",

                  "ip": "1.2.3.4",

                  "user": "null",

                  "vlan": "255",

                  "switchport": null,

                  "ip6": "",

                  "firstSeen": 1518365681,

                  "lastSeen": 1526087474,

                  "manufacturer": "Apple",

                  "os": "iOS",

                  "ssid": "My SSID",

                  "wirelessCapabilities": "802.11ac - 2.4 and 5 GHz",

                  "smInstalled": true,

                  "recentDeviceMac": "00:11:22:33:44:55",

                  "clientVpnConnections": [

                    {

                      "remoteIp": "1.2.3.4",

                      "connectedAt": 1522613355,

                      "disconnectedAt": 1522613360

                    }

                  ],

                  "lldp": [

                    [

                      "System name",

                      "Some system name"

                    ],

                    [

                      "System description",

                      "Some system description"

                    ],

                    [

                      "Port ID",

                      "1"

                    ],

                    [

                      "Chassis ID",

                      "00:18:0a:00:00:00"

                    ],

                    [

                      "Port description",

                      "eth0"

                    ],

                    [

                      "System capabilities",

                      "Two-port MAC Relay"

                    ]

                  ],

                  "cdp": null,

                  "status": "Online"

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/clients/{clientId}/policy":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Clients
      summary: getNetworkClientPolicy
      description: Returns the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.
      operationId: getNetworkClientPolicy
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: clientId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "mac": "00:11:22:33:44:55",

                    "type": "Group policy",

                    "groupPolicyId": "101"

                  }
              example: |-
                {

                  "mac": "00:11:22:33:44:55",

                  "type": "Group policy",

                  "groupPolicyId": "101"

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/clients/{clientId}/trafficHistory":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Clients
      summary: getNetworkClientTrafficHistory
      description: "Returns the client's network traffic data over time. Usage data is in kilobytes. This endpoint requires detailed traffic analysis to be enabled on the Network-wide > General page. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
      operationId: getNetworkClientTrafficHistory
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: clientId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: perPage
          in: query
          description: The number of entries per page returned. Acceptable range is 3 - 1000.
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: startingAfter
          in: query
          description: "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          style: form
          explode: true
          schema:
            type: string
        - name: endingBefore
          in: query
          description: "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "ts": 1518365681,

                      "application": "Google",

                      "destination": "www.google.com",

                      "protocol": "UDP",

                      "port": 443,

                      "recv": 383,

                      "sent": 56,

                      "numFlows": 5,

                      "activeSeconds": 240

                    }

                  ]
              example: |-
                [

                  {

                    "ts": 1518365681,

                    "application": "Google",

                    "destination": "www.google.com",

                    "protocol": "UDP",

                    "port": 443,

                    "recv": 383,

                    "sent": 56,

                    "numFlows": 5,

                    "activeSeconds": 240

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/clients":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Clients
      summary: getNetworkClients
      description: Lists the clients that have used this network in the timespan.
      operationId: getNetworkClients
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: t0
          in: query
          description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
          style: form
          explode: true
          schema:
            type: string
        - name: timespan
          in: query
          description: "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
          style: form
          explode: true
          schema:
            type: number
            format: double
        - name: perPage
          in: query
          description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 10.
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: startingAfter
          in: query
          description: "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          style: form
          explode: true
          schema:
            type: string
        - name: endingBefore
          in: query
          description: "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "usage": {

                        "sent": 138,

                        "recv": 61

                      },

                      "id": "k74272e",

                      "description": "Miles's phone",

                      "mac": "22:33:44:55:66:77",

                      "ip": "1.2.3.4",

                      "user": "milesmeraki",

                      "vlan": 255,

                      "switchport": null,

                      "ip6": "",

                      "firstSeen": 1518365681,

                      "lastSeen": 1526087474,

                      "manufacturer": "Apple",

                      "os": "iOS",

                      "recentDeviceSerial": "Q234-ABCD-5678",

                      "recentDeviceName": "My AP",

                      "recentDeviceMac": "00:11:22:33:44:55",

                      "ssid": "My SSID",

                      "status": "Online",

                      "notes": "My client note",

                      "ip6Local": "fe80:0:0:0:1430:aac1:6826:75ab",

                      "smInstalled": true,

                      "groupPolicy8021x": "Student_Access"

                    }

                  ]
              example: |-
                [

                  {

                    "usage": {

                      "sent": 138,

                      "recv": 61

                    },

                    "id": "k74272e",

                    "description": "Miles's phone",

                    "mac": "22:33:44:55:66:77",

                    "ip": "1.2.3.4",

                    "user": "milesmeraki",

                    "vlan": 255,

                    "switchport": null,

                    "ip6": "",

                    "firstSeen": 1518365681,

                    "lastSeen": 1526087474,

                    "manufacturer": "Apple",

                    "os": "iOS",

                    "recentDeviceSerial": "Q234-ABCD-5678",

                    "recentDeviceName": "My AP",

                    "recentDeviceMac": "00:11:22:33:44:55",

                    "ssid": "My SSID",

                    "status": "Online",

                    "notes": "My client note",

                    "ip6Local": "fe80:0:0:0:1430:aac1:6826:75ab",

                    "smInstalled": true,

                    "groupPolicy8021x": "Student_Access"

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/clients/{clientId}/latencyHistory":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Clients
      summary: getNetworkClientLatencyHistory
      description: "Returns the latency history for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP. The latency data is from a sample of 2% of packets and is grouped into 4 traffic categories: background, best effort, video, voice. Within these categories the sampled packet counters are bucketed by latency in milliseconds."
      operationId: getNetworkClientLatencyHistory
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: clientId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: t0
          in: query
          description: The beginning of the timespan for the data. The maximum lookback period is 791 days from today.
          style: form
          explode: true
          schema:
            type: string
        - name: t1
          in: query
          description: The end of the timespan for the data. t1 can be a maximum of 791 days after t0.
          style: form
          explode: true
          schema:
            type: string
        - name: timespan
          in: query
          description: "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 1 day."
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 7200
        - name: resolution
          in: query
          description: "The time resolution in seconds for returned data. The valid resolutions are: 86400. The default is 86400."
          style: form
          explode: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "t0": 1550534400,

                      "t1": 1550620800,

                      "latencyBinsByCategory": {

                        "backgroundTraffic": {

                          "0.5": 41750,

                          "1.0": 21552,

                          "2.0": 59940,

                          "4.0": 146622,

                          "8.0": 57354,

                          "16.0": 0,

                          "32.0": 9954,

                          "64.0": 0,

                          "128.0": 0,

                          "256.0": 1896,

                          "512.0": 0,

                          "1024.0": 0,

                          "2048.0": 0

                        },

                        "bestEffortTraffic": {

                          "0.5": 1840899,

                          "1.0": 1644506,

                          "2.0": 629958,

                          "4.0": 449564,

                          "8.0": 2009658,

                          "16.0": 1329568,

                          "32.0": 282168,

                          "64.0": 97573,

                          "128.0": 191977,

                          "256.0": 30560,

                          "512.0": 26032,

                          "1024.0": 4943,

                          "2048.0": 12072

                        },

                        "videoTraffic": {

                          "0.5": 0,

                          "1.0": 0,

                          "2.0": 0,

                          "4.0": 0,

                          "8.0": 0,

                          "16.0": 0,

                          "32.0": 0,

                          "64.0": 0,

                          "128.0": 0,

                          "256.0": 0,

                          "512.0": 0,

                          "1024.0": 0,

                          "2048.0": 0

                        },

                        "voiceTraffic": {

                          "0.5": 716,

                          "1.0": 948,

                          "2.0": 474,

                          "4.0": 78,

                          "8.0": 0,

                          "16.0": 0,

                          "32.0": 0,

                          "64.0": 0,

                          "128.0": 0,

                          "256.0": 0,

                          "512.0": 0,

                          "1024.0": 0,

                          "2048.0": 0

                        }

                      }

                    }

                  ]
              example: |-
                [

                  {

                    "t0": 1550534400,

                    "t1": 1550620800,

                    "latencyBinsByCategory": {

                      "backgroundTraffic": {

                        "0.5": 41750,

                        "1.0": 21552,

                        "2.0": 59940,

                        "4.0": 146622,

                        "8.0": 57354,

                        "16.0": 0,

                        "32.0": 9954,

                        "64.0": 0,

                        "128.0": 0,

                        "256.0": 1896,

                        "512.0": 0,

                        "1024.0": 0,

                        "2048.0": 0

                      },

                      "bestEffortTraffic": {

                        "0.5": 1840899,

                        "1.0": 1644506,

                        "2.0": 629958,

                        "4.0": 449564,

                        "8.0": 2009658,

                        "16.0": 1329568,

                        "32.0": 282168,

                        "64.0": 97573,

                        "128.0": 191977,

                        "256.0": 30560,

                        "512.0": 26032,

                        "1024.0": 4943,

                        "2048.0": 12072

                      },

                      "videoTraffic": {

                        "0.5": 0,

                        "1.0": 0,

                        "2.0": 0,

                        "4.0": 0,

                        "8.0": 0,

                        "16.0": 0,

                        "32.0": 0,

                        "64.0": 0,

                        "128.0": 0,

                        "256.0": 0,

                        "512.0": 0,

                        "1024.0": 0,

                        "2048.0": 0

                      },

                      "voiceTraffic": {

                        "0.5": 716,

                        "1.0": 948,

                        "2.0": 474,

                        "4.0": 78,

                        "8.0": 0,

                        "16.0": 0,

                        "32.0": 0,

                        "64.0": 0,

                        "128.0": 0,

                        "256.0": 0,

                        "512.0": 0,

                        "1024.0": 0,

                        "2048.0": 0

                      }

                    }

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/contentFiltering/categories":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Content filtering categories
      summary: getNetworkContentFilteringCategories
      description: Lists all available content filtering categories for an MX network.
      operationId: getNetworkContentFilteringCategories
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "categories": [

                      {

                        "id": "meraki:contentFiltering/category/1",

                        "name": "Real Estate"

                      },

                      {

                        "id": "meraki:contentFiltering/category/3",

                        "name": "Financial Services"

                      },

                      "...",

                      {

                        "id": "meraki:contentFiltering/category/11",

                        "name": "Adult and Pornography"

                      }

                    ]

                  }
              example: |-
                {

                  "categories": [

                    {

                      "id": "meraki:contentFiltering/category/1",

                      "name": "Real Estate"

                    },

                    {

                      "id": "meraki:contentFiltering/category/3",

                      "name": "Financial Services"

                    },

                    "...",

                    {

                      "id": "meraki:contentFiltering/category/11",

                      "name": "Adult and Pornography"

                    }

                  ]

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/contentFiltering":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Content filtering rules
      summary: getNetworkContentFiltering
      description: Returns the content filtering settings for an MX network.
      operationId: getNetworkContentFiltering
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "allowedUrlPatterns": [

                      "http://www.example.org",

                      "http://help.com.au"

                    ],

                    "blockedUrlPatterns": [

                      "http://www.example.com",

                      "http://www.betting.com"

                    ],

                    "blockedUrlCategories": [

                      {

                        "id": "meraki:contentFiltering/category/1",

                        "name": "Real Estate"

                      },

                      {

                        "id": "meraki:contentFiltering/category/7",

                        "name": "Shopping"

                      }

                    ],

                    "urlCategoryListSize": "topSites"

                  }
              example: |-
                {

                  "allowedUrlPatterns": [

                    "http://www.example.org",

                    "http://help.com.au"

                  ],

                  "blockedUrlPatterns": [

                    "http://www.example.com",

                    "http://www.betting.com"

                  ],

                  "blockedUrlCategories": [

                    {

                      "id": "meraki:contentFiltering/category/1",

                      "name": "Real Estate"

                    },

                    {

                      "id": "meraki:contentFiltering/category/7",

                      "name": "Shopping"

                    }

                  ],

                  "urlCategoryListSize": "topSites"

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/devices/{serial}/lldp_cdp":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Devices
      summary: getNetworkDeviceLldp_cdp
      description: Lists LLDP and CDP information for a device.
      operationId: getNetworkDeviceLldp_cdp
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: serial
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: timespan
          in: query
          description: "The timespan for which LLDP and CDP information will be fetched. Must be in seconds and less than or equal to a month (2592000 seconds). LLDP and CDP information is sent to the Meraki dashboard every 10 minutes. In instances where this LLDP and CDP information matches an existing entry in the Meraki dashboard, the data is updated once every two hours. Meraki recommends querying LLDP and CDP information at an interval slightly greater than two hours, to ensure that unchanged CDP / LLDP information can be queried consistently."
          style: form
          explode: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "sourceMac": "00:11:22:33:44:55",

                    "ports": {

                      "8": {

                        "cdp": {

                          "deviceId": "e0553d8cdf53",

                          "portId": "Port 10",

                          "address": "00:11:22:33:44:55",

                          "sourcePort": "8"

                        }

                      },

                      "12": {

                        "cdp": {

                          "deviceId": "e0553d8cdf53",

                          "portId": "Port 11",

                          "address": "00:11:22:33:44:55",

                          "sourcePort": "12"

                        },

                        "lldp": {

                          "systemName": "Meraki MS350-24X - Phineas",

                          "portId": "11",

                          "managementAddress": "00:11:22:33:44:55",

                          "sourcePort": "12"

                        }

                      }

                    }

                  }
              example: |-
                {

                  "sourceMac": "00:11:22:33:44:55",

                  "ports": {

                    "8": {

                      "cdp": {

                        "deviceId": "e0553d8cdf53",

                        "portId": "Port 10",

                        "address": "00:11:22:33:44:55",

                        "sourcePort": "8"

                      }

                    },

                    "12": {

                      "cdp": {

                        "deviceId": "e0553d8cdf53",

                        "portId": "Port 11",

                        "address": "00:11:22:33:44:55",

                        "sourcePort": "12"

                      },

                      "lldp": {

                        "systemName": "Meraki MS350-24X - Phineas",

                        "portId": "11",

                        "managementAddress": "00:11:22:33:44:55",

                        "sourcePort": "12"

                      }

                    }

                  }

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/devices":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Devices
      summary: getNetworkDevices
      description: Lists the devices in a network.
      operationId: getNetworkDevices
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "name": "My AP",

                      "lat": 37.4180951010362,

                      "lng": -122.098531723022,

                      "serial": "Q234-ABCD-5678",

                      "mac": "00:11:22:33:44:55",

                      "model": "MR34",

                      "address": "1600 Pennsylvania Ave",

                      "notes": "My AP's note",

                      "lanIp": "1.2.3.4",

                      "tags": " recently-added ",

                      "networkId": "N_24329156",

                      "beaconIdParams": {

                        "uuid": "00000000-0000-0000-0000-000000000000",

                        "major": 5,

                        "minor": 3

                      },

                      "firmware": "wireless-25-14",

                      "floorPlanId": "g_1234567"

                    }

                  ]
              example: |-
                [

                  {

                    "name": "My AP",

                    "lat": 37.4180951010362,

                    "lng": -122.098531723022,

                    "serial": "Q234-ABCD-5678",

                    "mac": "00:11:22:33:44:55",

                    "model": "MR34",

                    "address": "1600 Pennsylvania Ave",

                    "notes": "My AP's note",

                    "lanIp": "1.2.3.4",

                    "tags": " recently-added ",

                    "networkId": "N_24329156",

                    "beaconIdParams": {

                      "uuid": "00000000-0000-0000-0000-000000000000",

                      "major": 5,

                      "minor": 3

                    },

                    "firmware": "wireless-25-14",

                    "floorPlanId": "g_1234567"

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/devices/{serial}":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Devices
      summary: getNetworkDevice
      description: Returns a single device.
      operationId: getNetworkDevice
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: serial
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "name": "My AP",

                    "lat": 37.4180951010362,

                    "lng": -122.098531723022,

                    "serial": "Q234-ABCD-5678",

                    "mac": "00:11:22:33:44:55",

                    "model": "MR34",

                    "address": "1600 Pennsylvania Ave",

                    "notes": "My AP's note",

                    "lanIp": "1.2.3.4",

                    "tags": " recently-added ",

                    "networkId": "N_24329156",

                    "beaconIdParams": {

                      "uuid": "00000000-0000-0000-0000-000000000000",

                      "major": 5,

                      "minor": 3

                    },

                    "firmware": "wireless-25-14",

                    "floorPlanId": "g_1234567"

                  }
              example: |-
                {

                  "name": "My AP",

                  "lat": 37.4180951010362,

                  "lng": -122.098531723022,

                  "serial": "Q234-ABCD-5678",

                  "mac": "00:11:22:33:44:55",

                  "model": "MR34",

                  "address": "1600 Pennsylvania Ave",

                  "notes": "My AP's note",

                  "lanIp": "1.2.3.4",

                  "tags": " recently-added ",

                  "networkId": "N_24329156",

                  "beaconIdParams": {

                    "uuid": "00000000-0000-0000-0000-000000000000",

                    "major": 5,

                    "minor": 3

                  },

                  "firmware": "wireless-25-14",

                  "floorPlanId": "g_1234567"

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/devices/{serial}/lossAndLatencyHistory":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Devices
      summary: getNetworkDeviceLossAndLatencyHistory
      description: Retrieves the uplink loss percentage and latency in milliseconds for a wired network device.
      operationId: getNetworkDeviceLossAndLatencyHistory
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: serial
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: t0
          in: query
          description: The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
          style: form
          explode: true
          schema:
            type: string
        - name: t1
          in: query
          description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
          style: form
          explode: true
          schema:
            type: string
        - name: timespan
          in: query
          description: "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 7200
        - name: resolution
          in: query
          description: "The time resolution in seconds for returned data. The valid resolutions are: 60, 600, 3600, 86400. The default is 60."
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: uplink
          in: query
          description: "The WAN uplink used to obtain the requested stats. Valid uplinks are wan1, wan2, cellular. The default is wan1."
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/uplink"
        - name: ip
          in: query
          description: The destination IP used to obtain the requested stats. This is required.
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: 1.2.3.4
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "startTime": "2018-10-09T22:18:27Z",

                      "endTime": "2018-10-09T22:19:27Z",

                      "lossPercent": 5,

                      "latencyMs": 324

                    },

                    {

                      "startTime": "2018-10-09T22:19:27Z",

                      "endTime": "2018-10-09T22:20:27Z",

                      "lossPercent": 1,

                      "latencyMs": 43

                    },

                    {

                      "startTime": "2018-10-09T22:20:27Z",

                      "endTime": "2018-10-09T22:21:27Z",

                      "lossPercent": 0,

                      "latencyMs": 44

                    }

                  ]
              example: |-
                [

                  {

                    "startTime": "2018-10-09T22:18:27Z",

                    "endTime": "2018-10-09T22:19:27Z",

                    "lossPercent": 5,

                    "latencyMs": 324

                  },

                  {

                    "startTime": "2018-10-09T22:19:27Z",

                    "endTime": "2018-10-09T22:20:27Z",

                    "lossPercent": 1,

                    "latencyMs": 43

                  },

                  {

                    "startTime": "2018-10-09T22:20:27Z",

                    "endTime": "2018-10-09T22:21:27Z",

                    "lossPercent": 0,

                    "latencyMs": 44

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/organizations/{organizationId}/devices":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Devices
      summary: getOrganizationDevices
      description: Lists the devices in an organization.
      operationId: getOrganizationDevices
      parameters:
        - name: organizationId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: perPage
          in: query
          description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: startingAfter
          in: query
          description: "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          style: form
          explode: true
          schema:
            type: string
        - name: endingBefore
          in: query
          description: "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          style: form
          explode: true
          schema:
            type: string
        - name: configurationUpdatedAfter
          in: query
          description: "Filter results by whether or not the device's configuration has been updated after the given timestamp"
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "name": "My AP",

                      "lat": 37.4180951010362,

                      "lng": -122.098531723022,

                      "address": "1600 Pennsylvania Ave",

                      "notes": "My AP's note",

                      "tags": " recently-added ",

                      "networkId": "N_24329156",

                      "serial": "Q234-ABCD-5678",

                      "model": "MR34",

                      "mac": "00:11:22:33:44:55",

                      "lanIp": "1.2.3.4",

                      "firmware": "wireless-25-14"

                    }

                  ]
              example: |-
                [

                  {

                    "name": "My AP",

                    "lat": 37.4180951010362,

                    "lng": -122.098531723022,

                    "address": "1600 Pennsylvania Ave",

                    "notes": "My AP's note",

                    "tags": " recently-added ",

                    "networkId": "N_24329156",

                    "serial": "Q234-ABCD-5678",

                    "model": "MR34",

                    "mac": "00:11:22:33:44:55",

                    "lanIp": "1.2.3.4",

                    "firmware": "wireless-25-14"

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/devices/{serial}/performance":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Devices
      summary: getNetworkDevicePerformance
      description: "Returns the performance score for a single device. Only primary MX devices supported. If no data is available, a 204 error code is returned."
      operationId: getNetworkDevicePerformance
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: serial
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "perfScore": 10

                  }
              example: |-
                {

                  "perfScore": 10

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/devices/{serial}/uplink":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Devices
      summary: getNetworkDeviceUplink
      description: Returns the uplink information for a device.
      operationId: getNetworkDeviceUplink
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: serial
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "interface": "WAN 1",

                      "status": "Active",

                      "ip": "1.2.3.4",

                      "gateway": "1.2.3.5",

                      "publicIp": "123.123.123.1",

                      "dns": "8.8.8.8, 8.8.4.4",

                      "usingStaticIp": false

                    }

                  ]
              example: |-
                [

                  {

                    "interface": "WAN 1",

                    "status": "Active",

                    "ip": "1.2.3.4",

                    "gateway": "1.2.3.5",

                    "publicIp": "123.123.123.1",

                    "dns": "8.8.8.8, 8.8.4.4",

                    "usingStaticIp": false

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/events":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Events
      summary: getNetworkEvents
      description: Lists the events for the network.
      operationId: getNetworkEvents
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: productType
          in: query
          description: "The product type to fetch events for. This parameter is required for networks with multiple device types. Valid types are wireless, appliance, switch, systemsManager, camera, and cellularGateway"
          style: form
          explode: true
          schema:
            type: string
        - name: includedEventTypes
          in: query
          description: A list of event types. The returned events will be filtered to only include events with these types.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: excludedEventTypes
          in: query
          description: A list of event types. The returned events will be filtered to exclude events with these types.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: deviceMac
          in: query
          description: The MAC address of the Meraki device which the list of events will be filtered with
          style: form
          explode: true
          schema:
            type: string
        - name: deviceSerial
          in: query
          description: The serial of the Meraki device which the list of events will be filtered with
          style: form
          explode: true
          schema:
            type: string
        - name: deviceName
          in: query
          description: The name of the Meraki device which the list of events will be filtered with
          style: form
          explode: true
          schema:
            type: string
        - name: clientIp
          in: query
          description: The IP of the client which the list of events will be filtered with. Only supported for track-by-IP networks.
          style: form
          explode: true
          schema:
            type: string
        - name: clientMac
          in: query
          description: The MAC address of the client which the list of events will be filtered with. Only supported for track-by-MAC networks.
          style: form
          explode: true
          schema:
            type: string
        - name: clientName
          in: query
          description: "The name, or partial name, of the client which the list of events will be filtered with"
          style: form
          explode: true
          schema:
            type: string
        - name: smDeviceMac
          in: query
          description: The MAC address of the Systems Manager device which the list of events will be filtered with
          style: form
          explode: true
          schema:
            type: string
        - name: smDeviceName
          in: query
          description: The name of the Systems Manager device which the list of events will be filtered with
          style: form
          explode: true
          schema:
            type: string
        - name: perPage
          in: query
          description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 10.
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: startingAfter
          in: query
          description: "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          style: form
          explode: true
          schema:
            type: string
        - name: endingBefore
          in: query
          description: "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "message": null,

                    "pageStartAt": "2018-02-11T00:00:00.090210Z",

                    "pageEndAt": "2018-02-11T00:00:00.090210Z",

                    "events": [

                      {

                        "occurredAt": "2018-02-11T00:00:00.090210Z",

                        "networkId": "N_24329156",

                        "type": "association",

                        "description": "802.11 association",

                        "clientId": "k74272e",

                        "clientDescription": "Miles's phone",

                        "deviceSerial": "Q234-ABCD-5678",

                        "deviceName": "My AP",

                        "ssidNumber": 1,

                        "ssidName": "My SSID",

                        "eventData": {

                          "radio": "1",

                          "vap": "1",

                          "client_mac": "22:33:44:55:66:77",

                          "client_ip": "1.2.3.4",

                          "channel": "36",

                          "rssi": "12",

                          "aid": "2104009183"

                        }

                      }

                    ]

                  }
              example: |-
                {

                  "message": null,

                  "pageStartAt": "2018-02-11T00:00:00.090210Z",

                  "pageEndAt": "2018-02-11T00:00:00.090210Z",

                  "events": [

                    {

                      "occurredAt": "2018-02-11T00:00:00.090210Z",

                      "networkId": "N_24329156",

                      "type": "association",

                      "description": "802.11 association",

                      "clientId": "k74272e",

                      "clientDescription": "Miles's phone",

                      "deviceSerial": "Q234-ABCD-5678",

                      "deviceName": "My AP",

                      "ssidNumber": 1,

                      "ssidName": "My SSID",

                      "eventData": {

                        "radio": "1",

                        "vap": "1",

                        "client_mac": "22:33:44:55:66:77",

                        "client_ip": "1.2.3.4",

                        "channel": "36",

                        "rssi": "12",

                        "aid": "2104009183"

                      }

                    }

                  ]

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/events/eventTypes":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Events
      summary: getNetworkEventsEventTypes
      description: Lists the event type to human-readable descriptions.
      operationId: getNetworkEventsEventTypes
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "category": "802.11",

                      "type": "association",

                      "description": "802.11 association"

                    }

                  ]
              example: |-
                [

                  {

                    "category": "802.11",

                    "type": "association",

                    "description": "802.11 association"

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/firewalledServices/{service}":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"  
    get:
      tags:
        - Firewalled services
      summary: getNetworkFirewalledService
      description: "Returns the accessibility settings of the given service ('ICMP', 'web', or 'SNMP')"
      operationId: getNetworkFirewalledService
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: service
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "service": "web",

                    "access": "restricted",

                    "allowedIps": [

                      "123.123.123.1"

                    ]

                  }
              example: |-
                {

                  "service": "web",

                  "access": "restricted",

                  "allowedIps": [

                    "123.123.123.1"

                  ]

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/firewalledServices":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Firewalled services
      summary: getNetworkFirewalledServices
      description: Lists the appliance services and their accessibility rules.
      operationId: getNetworkFirewalledServices
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "service": "web",

                      "access": "restricted",

                      "allowedIps": [

                        "123.123.123.1"

                      ]

                    }

                  ]
              example: |-
                [

                  {

                    "service": "web",

                    "access": "restricted",

                    "allowedIps": [

                      "123.123.123.1"

                    ]

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/floorPlans/{floorPlanId}":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Floorplans
      summary: getNetworkFloorPlan
      description: Finds a floor plan by ID.
      operationId: getNetworkFloorPlan
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: floorPlanId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "floorPlanId": "g_1234567",

                    "imageUrl": "https://meraki-na.s3.amazonaws.com/assets/...",

                    "imageUrlExpiresAt": "2019-06-11 16:04:54 +00:00",

                    "imageExtension": "png",

                    "imageMd5": "2a9edd3f4ffd80130c647d13eacb59f3",

                    "name": "HQ Floor Plan",

                    "devices": [

                      {

                        "name": "My AP",

                        "lat": 37.4180951010362,

                        "lng": -122.098531723022,

                        "serial": "Q234-ABCD-5678",

                        "mac": "00:11:22:33:44:55",

                        "model": "MR34",

                        "address": "1600 Pennsylvania Ave",

                        "notes": "My AP's note",

                        "lanIp": "1.2.3.4",

                        "tags": " recently-added ",

                        "networkId": "N_24329156",

                        "beaconIdParams": {

                          "uuid": "00000000-0000-0000-0000-000000000000",

                          "major": 5,

                          "minor": 3

                        },

                        "firmware": "wireless-25-14",

                        "floorPlanId": "g_1234567"

                      }

                    ],

                    "width": 100,

                    "height": 150,

                    "center": {

                      "lat": 37.770040510499996,

                      "lng": -122.38714009525

                    },

                    "bottomLeftCorner": {

                      "lat": 37.7696461495,

                      "lng": -122.3880815506

                    },

                    "bottomRightCorner": {

                      "lat": 37.771524649766654,

                      "lng": -122.38795275055205

                    },

                    "topLeftCorner": {

                      "lat": 37.769700101836364,

                      "lng": -122.3888684251381

                    },

                    "topRightCorner": {

                      "lat": 37.77157860210302,

                      "lng": -122.38873962509013

                    }

                  }
              example: |-
                {

                  "floorPlanId": "g_1234567",

                  "imageUrl": "https://meraki-na.s3.amazonaws.com/assets/...",

                  "imageUrlExpiresAt": "2019-06-11 16:04:54 +00:00",

                  "imageExtension": "png",

                  "imageMd5": "2a9edd3f4ffd80130c647d13eacb59f3",

                  "name": "HQ Floor Plan",

                  "devices": [

                    {

                      "name": "My AP",

                      "lat": 37.4180951010362,

                      "lng": -122.098531723022,

                      "serial": "Q234-ABCD-5678",

                      "mac": "00:11:22:33:44:55",

                      "model": "MR34",

                      "address": "1600 Pennsylvania Ave",

                      "notes": "My AP's note",

                      "lanIp": "1.2.3.4",

                      "tags": " recently-added ",

                      "networkId": "N_24329156",

                      "beaconIdParams": {

                        "uuid": "00000000-0000-0000-0000-000000000000",

                        "major": 5,

                        "minor": 3

                      },

                      "firmware": "wireless-25-14",

                      "floorPlanId": "g_1234567"

                    }

                  ],

                  "width": 100,

                  "height": 150,

                  "center": {

                    "lat": 37.770040510499996,

                    "lng": -122.38714009525

                  },

                  "bottomLeftCorner": {

                    "lat": 37.7696461495,

                    "lng": -122.3880815506

                  },

                  "bottomRightCorner": {

                    "lat": 37.771524649766654,

                    "lng": -122.38795275055205

                  },

                  "topLeftCorner": {

                    "lat": 37.769700101836364,

                    "lng": -122.3888684251381

                  },

                  "topRightCorner": {

                    "lat": 37.77157860210302,

                    "lng": -122.38873962509013

                  }

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/floorPlans":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Floorplans
      summary: getNetworkFloorPlans
      description: Lists the floor plans that belong to your network.
      operationId: getNetworkFloorPlans
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "floorPlanId": "g_1234567",

                      "imageUrl": "https://meraki-na.s3.amazonaws.com/assets/...",

                      "imageUrlExpiresAt": "2019-06-11 16:04:54 +00:00",

                      "imageExtension": "png",

                      "imageMd5": "2a9edd3f4ffd80130c647d13eacb59f3",

                      "name": "HQ Floor Plan",

                      "devices": [

                        {

                          "name": "My AP",

                          "lat": 37.4180951010362,

                          "lng": -122.098531723022,

                          "serial": "Q234-ABCD-5678",

                          "mac": "00:11:22:33:44:55",

                          "model": "MR34",

                          "address": "1600 Pennsylvania Ave",

                          "notes": "My AP's note",

                          "lanIp": "1.2.3.4",

                          "tags": " recently-added ",

                          "networkId": "N_24329156",

                          "beaconIdParams": {

                            "uuid": "00000000-0000-0000-0000-000000000000",

                            "major": 5,

                            "minor": 3

                          },

                          "firmware": "wireless-25-14",

                          "floorPlanId": "g_1234567"

                        }

                      ],

                      "width": 100,

                      "height": 150,

                      "center": {

                        "lat": 37.770040510499996,

                        "lng": -122.38714009525

                      },

                      "bottomLeftCorner": {

                        "lat": 37.7696461495,

                        "lng": -122.3880815506

                      },

                      "bottomRightCorner": {

                        "lat": 37.771524649766654,

                        "lng": -122.38795275055205

                      },

                      "topLeftCorner": {

                        "lat": 37.769700101836364,

                        "lng": -122.3888684251381

                      },

                      "topRightCorner": {

                        "lat": 37.77157860210302,

                        "lng": -122.38873962509013

                      }

                    }

                  ]
              example: |-
                [

                  {

                    "floorPlanId": "g_1234567",

                    "imageUrl": "https://meraki-na.s3.amazonaws.com/assets/...",

                    "imageUrlExpiresAt": "2019-06-11 16:04:54 +00:00",

                    "imageExtension": "png",

                    "imageMd5": "2a9edd3f4ffd80130c647d13eacb59f3",

                    "name": "HQ Floor Plan",

                    "devices": [

                      {

                        "name": "My AP",

                        "lat": 37.4180951010362,

                        "lng": -122.098531723022,

                        "serial": "Q234-ABCD-5678",

                        "mac": "00:11:22:33:44:55",

                        "model": "MR34",

                        "address": "1600 Pennsylvania Ave",

                        "notes": "My AP's note",

                        "lanIp": "1.2.3.4",

                        "tags": " recently-added ",

                        "networkId": "N_24329156",

                        "beaconIdParams": {

                          "uuid": "00000000-0000-0000-0000-000000000000",

                          "major": 5,

                          "minor": 3

                        },

                        "firmware": "wireless-25-14",

                        "floorPlanId": "g_1234567"

                      }

                    ],

                    "width": 100,

                    "height": 150,

                    "center": {

                      "lat": 37.770040510499996,

                      "lng": -122.38714009525

                    },

                    "bottomLeftCorner": {

                      "lat": 37.7696461495,

                      "lng": -122.3880815506

                    },

                    "bottomRightCorner": {

                      "lat": 37.771524649766654,

                      "lng": -122.38795275055205

                    },

                    "topLeftCorner": {

                      "lat": 37.769700101836364,

                      "lng": -122.3888684251381

                    },

                    "topRightCorner": {

                      "lat": 37.77157860210302,

                      "lng": -122.38873962509013

                    }

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/groupPolicies":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Group policies
      summary: getNetworkGroupPolicies
      description: Lists the group policies in a network.
      operationId: getNetworkGroupPolicies
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "name": "No video streaming",

                      "groupPolicyId": "101",

                      "scheduling": {

                        "enabled": true,

                        "monday": {

                          "active": true,

                          "from": "9:00",

                          "to": "17:00"

                        },

                        "tuesday": {

                          "active": true,

                          "from": "9:00",

                          "to": "17:00"

                        },

                        "wednesday": {

                          "active": true,

                          "from": "9:00",

                          "to": "17:00"

                        },

                        "thursday": {

                          "active": true,

                          "from": "9:00",

                          "to": "17:00"

                        },

                        "friday": {

                          "active": true,

                          "from": "9:00",

                          "to": "17:00"

                        },

                        "saturday": {

                          "active": false,

                          "from": "0:00",

                          "to": "24:00"

                        },

                        "sunday": {

                          "active": false,

                          "from": "0:00",

                          "to": "24:00"

                        }

                      },

                      "bandwidth": {

                        "settings": "custom",

                        "bandwidthLimits": {

                          "limitUp": 1000000,

                          "limitDown": 1000000

                        }

                      },

                      "firewallAndTrafficShaping": {

                        "settings": "custom",

                        "trafficShapingRules": [

                          {

                            "definitions": [

                              {

                                "type": "host",

                                "value": "google.com"

                              },

                              {

                                "type": "port",

                                "value": "9090"

                              },

                              {

                                "type": "ipRange",

                                "value": "192.1.0.0"

                              },

                              {

                                "type": "ipRange",

                                "value": "192.1.0.0/16"

                              },

                              {

                                "type": "ipRange",

                                "value": "10.1.0.0/16:80"

                              },

                              {

                                "type": "localNet",

                                "value": "192.168.0.0/16"

                              },

                              {

                                "type": "applicationCategory",

                                "value": {

                                  "id": "meraki:layer7/category/2",

                                  "name": "Blogging"

                                }

                              },

                              {

                                "type": "application",

                                "value": {

                                  "id": "meraki:layer7/application/133",

                                  "name": "Battle.net"

                                }

                              }

                            ],

                            "perClientBandwidthLimits": {

                              "settings": "custom",

                              "bandwidthLimits": {

                                "limitUp": 1000000,

                                "limitDown": 1000000

                              }

                            },

                            "dscpTagValue": null,

                            "pcpTagValue": null

                          }

                        ],

                        "l3FirewallRules": [

                          {

                            "comment": "Allow TCP traffic to subnet with HTTP servers.",

                            "policy": "allow",

                            "protocol": "tcp",

                            "destPort": 443,

                            "destCidr": "192.168.1.0/24"

                          }

                        ],

                        "l7FirewallRules": [

                          [

                            {

                              "policy": "deny",

                              "type": "application",

                              "value": {

                                "id": "meraki:layer7/application/67",

                                "name": "Xbox LIVE"

                              }

                            },

                            {

                              "policy": "deny",

                              "type": "applicationCategory",

                              "value": {

                                "id": "meraki:layer7/category/2",

                                "name": "Blogging"

                              }

                            },

                            {

                              "policy": "deny",

                              "type": "host",

                              "value": "google.com"

                            },

                            {

                              "policy": "deny",

                              "type": "port",

                              "value": "23"

                            },

                            {

                              "policy": "deny",

                              "type": "ipRange",

                              "value": "10.11.12.00/24"

                            },

                            {

                              "policy": "deny",

                              "type": "ipRange",

                              "value": "10.11.12.00/24:5555"

                            },

                            {

                              "policy": "deny",

                              "type": "blacklistedCountries",

                              "value": [

                                "AX",

                                "CA"

                              ]

                            },

                            {

                              "policy": "deny",

                              "type": "whitelistedCountries",

                              "value": [

                                "US"

                              ]

                            }

                          ]

                        ]

                      },

                      "contentFiltering": {

                        "allowedUrlPatterns": {

                          "settings": "network default",

                          "patterns": []

                        },

                        "blockedUrlPatterns": {

                          "settings": "append",

                          "patterns": [

                            "http://www.example.com",

                            "http://www.betting.com"

                          ]

                        },

                        "blockedUrlCategories": {

                          "settings": "override",

                          "categories": [

                            "meraki:contentFiltering/category/1",

                            "meraki:contentFiltering/category/7"

                          ]

                        }

                      },

                      "splashAuthSettings": "bypass",

                      "vlanTagging": {

                        "settings": "custom",

                        "vlanId": "1"

                      },

                      "bonjourForwarding": {

                        "settings": "custom",

                        "rules": [

                          {

                            "description": "A simple bonjour rule",

                            "vlanId": "1",

                            "services": [

                              "All Services"

                            ]

                          }

                        ]

                      }

                    }

                  ]
              example: |-
                [

                  {

                    "name": "No video streaming",

                    "groupPolicyId": "101",

                    "scheduling": {

                      "enabled": true,

                      "monday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "tuesday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "wednesday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "thursday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "friday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "saturday": {

                        "active": false,

                        "from": "0:00",

                        "to": "24:00"

                      },

                      "sunday": {

                        "active": false,

                        "from": "0:00",

                        "to": "24:00"

                      }

                    },

                    "bandwidth": {

                      "settings": "custom",

                      "bandwidthLimits": {

                        "limitUp": 1000000,

                        "limitDown": 1000000

                      }

                    },

                    "firewallAndTrafficShaping": {

                      "settings": "custom",

                      "trafficShapingRules": [

                        {

                          "definitions": [

                            {

                              "type": "host",

                              "value": "google.com"

                            },

                            {

                              "type": "port",

                              "value": "9090"

                            },

                            {

                              "type": "ipRange",

                              "value": "192.1.0.0"

                            },

                            {

                              "type": "ipRange",

                              "value": "192.1.0.0/16"

                            },

                            {

                              "type": "ipRange",

                              "value": "10.1.0.0/16:80"

                            },

                            {

                              "type": "localNet",

                              "value": "192.168.0.0/16"

                            },

                            {

                              "type": "applicationCategory",

                              "value": {

                                "id": "meraki:layer7/category/2",

                                "name": "Blogging"

                              }

                            },

                            {

                              "type": "application",

                              "value": {

                                "id": "meraki:layer7/application/133",

                                "name": "Battle.net"

                              }

                            }

                          ],

                          "perClientBandwidthLimits": {

                            "settings": "custom",

                            "bandwidthLimits": {

                              "limitUp": 1000000,

                              "limitDown": 1000000

                            }

                          },

                          "dscpTagValue": null,

                          "pcpTagValue": null

                        }

                      ],

                      "l3FirewallRules": [

                        {

                          "comment": "Allow TCP traffic to subnet with HTTP servers.",

                          "policy": "allow",

                          "protocol": "tcp",

                          "destPort": 443,

                          "destCidr": "192.168.1.0/24"

                        }

                      ],

                      "l7FirewallRules": [

                        [

                          {

                            "policy": "deny",

                            "type": "application",

                            "value": {

                              "id": "meraki:layer7/application/67",

                              "name": "Xbox LIVE"

                            }

                          },

                          {

                            "policy": "deny",

                            "type": "applicationCategory",

                            "value": {

                              "id": "meraki:layer7/category/2",

                              "name": "Blogging"

                            }

                          },

                          {

                            "policy": "deny",

                            "type": "host",

                            "value": "google.com"

                          },

                          {

                            "policy": "deny",

                            "type": "port",

                            "value": "23"

                          },

                          {

                            "policy": "deny",

                            "type": "ipRange",

                            "value": "10.11.12.00/24"

                          },

                          {

                            "policy": "deny",

                            "type": "ipRange",

                            "value": "10.11.12.00/24:5555"

                          },

                          {

                            "policy": "deny",

                            "type": "blacklistedCountries",

                            "value": [

                              "AX",

                              "CA"

                            ]

                          },

                          {

                            "policy": "deny",

                            "type": "whitelistedCountries",

                            "value": [

                              "US"

                            ]

                          }

                        ]

                      ]

                    },

                    "contentFiltering": {

                      "allowedUrlPatterns": {

                        "settings": "network default",

                        "patterns": []

                      },

                      "blockedUrlPatterns": {

                        "settings": "append",

                        "patterns": [

                          "http://www.example.com",

                          "http://www.betting.com"

                        ]

                      },

                      "blockedUrlCategories": {

                        "settings": "override",

                        "categories": [

                          "meraki:contentFiltering/category/1",

                          "meraki:contentFiltering/category/7"

                        ]

                      }

                    },

                    "splashAuthSettings": "bypass",

                    "vlanTagging": {

                      "settings": "custom",

                      "vlanId": "1"

                    },

                    "bonjourForwarding": {

                      "settings": "custom",

                      "rules": [

                        {

                          "description": "A simple bonjour rule",

                          "vlanId": "1",

                          "services": [

                            "All Services"

                          ]

                        }

                      ]

                    }

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/groupPolicies/{groupPolicyId}":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Group policies
      summary: getNetworkGroupPolicy
      description: Displays a group policy.
      operationId: getNetworkGroupPolicy
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: groupPolicyId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "name": "No video streaming",

                    "groupPolicyId": "101",

                    "scheduling": {

                      "enabled": true,

                      "monday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "tuesday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "wednesday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "thursday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "friday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "saturday": {

                        "active": false,

                        "from": "0:00",

                        "to": "24:00"

                      },

                      "sunday": {

                        "active": false,

                        "from": "0:00",

                        "to": "24:00"

                      }

                    },

                    "bandwidth": {

                      "settings": "custom",

                      "bandwidthLimits": {

                        "limitUp": 1000000,

                        "limitDown": 1000000

                      }

                    },

                    "firewallAndTrafficShaping": {

                      "settings": "custom",

                      "trafficShapingRules": [

                        {

                          "definitions": [

                            {

                              "type": "host",

                              "value": "google.com"

                            },

                            {

                              "type": "port",

                              "value": "9090"

                            },

                            {

                              "type": "ipRange",

                              "value": "192.1.0.0"

                            },

                            {

                              "type": "ipRange",

                              "value": "192.1.0.0/16"

                            },

                            {

                              "type": "ipRange",

                              "value": "10.1.0.0/16:80"

                            },

                            {

                              "type": "localNet",

                              "value": "192.168.0.0/16"

                            },

                            {

                              "type": "applicationCategory",

                              "value": {

                                "id": "meraki:layer7/category/2",

                                "name": "Blogging"

                              }

                            },

                            {

                              "type": "application",

                              "value": {

                                "id": "meraki:layer7/application/133",

                                "name": "Battle.net"

                              }

                            }

                          ],

                          "perClientBandwidthLimits": {

                            "settings": "custom",

                            "bandwidthLimits": {

                              "limitUp": 1000000,

                              "limitDown": 1000000

                            }

                          },

                          "dscpTagValue": null,

                          "pcpTagValue": null

                        }

                      ],

                      "l3FirewallRules": [

                        {

                          "comment": "Allow TCP traffic to subnet with HTTP servers.",

                          "policy": "allow",

                          "protocol": "tcp",

                          "destPort": 443,

                          "destCidr": "192.168.1.0/24"

                        }

                      ],

                      "l7FirewallRules": [

                        [

                          {

                            "policy": "deny",

                            "type": "application",

                            "value": {

                              "id": "meraki:layer7/application/67",

                              "name": "Xbox LIVE"

                            }

                          },

                          {

                            "policy": "deny",

                            "type": "applicationCategory",

                            "value": {

                              "id": "meraki:layer7/category/2",

                              "name": "Blogging"

                            }

                          },

                          {

                            "policy": "deny",

                            "type": "host",

                            "value": "google.com"

                          },

                          {

                            "policy": "deny",

                            "type": "port",

                            "value": "23"

                          },

                          {

                            "policy": "deny",

                            "type": "ipRange",

                            "value": "10.11.12.00/24"

                          },

                          {

                            "policy": "deny",

                            "type": "ipRange",

                            "value": "10.11.12.00/24:5555"

                          },

                          {

                            "policy": "deny",

                            "type": "blacklistedCountries",

                            "value": [

                              "AX",

                              "CA"

                            ]

                          },

                          {

                            "policy": "deny",

                            "type": "whitelistedCountries",

                            "value": [

                              "US"

                            ]

                          }

                        ]

                      ]

                    },

                    "contentFiltering": {

                      "allowedUrlPatterns": {

                        "settings": "network default",

                        "patterns": []

                      },

                      "blockedUrlPatterns": {

                        "settings": "append",

                        "patterns": [

                          "http://www.example.com",

                          "http://www.betting.com"

                        ]

                      },

                      "blockedUrlCategories": {

                        "settings": "override",

                        "categories": [

                          "meraki:contentFiltering/category/1",

                          "meraki:contentFiltering/category/7"

                        ]

                      }

                    },

                    "splashAuthSettings": "bypass",

                    "vlanTagging": {

                      "settings": "custom",

                      "vlanId": "1"

                    },

                    "bonjourForwarding": {

                      "settings": "custom",

                      "rules": [

                        {

                          "description": "A simple bonjour rule",

                          "vlanId": "1",

                          "services": [

                            "All Services"

                          ]

                        }

                      ]

                    }

                  }
              example: |-
                {

                  "name": "No video streaming",

                  "groupPolicyId": "101",

                  "scheduling": {

                    "enabled": true,

                    "monday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "tuesday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "wednesday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "thursday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "friday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "saturday": {

                      "active": false,

                      "from": "0:00",

                      "to": "24:00"

                    },

                    "sunday": {

                      "active": false,

                      "from": "0:00",

                      "to": "24:00"

                    }

                  },

                  "bandwidth": {

                    "settings": "custom",

                    "bandwidthLimits": {

                      "limitUp": 1000000,

                      "limitDown": 1000000

                    }

                  },

                  "firewallAndTrafficShaping": {

                    "settings": "custom",

                    "trafficShapingRules": [

                      {

                        "definitions": [

                          {

                            "type": "host",

                            "value": "google.com"

                          },

                          {

                            "type": "port",

                            "value": "9090"

                          },

                          {

                            "type": "ipRange",

                            "value": "192.1.0.0"

                          },

                          {

                            "type": "ipRange",

                            "value": "192.1.0.0/16"

                          },

                          {

                            "type": "ipRange",

                            "value": "10.1.0.0/16:80"

                          },

                          {

                            "type": "localNet",

                            "value": "192.168.0.0/16"

                          },

                          {

                            "type": "applicationCategory",

                            "value": {

                              "id": "meraki:layer7/category/2",

                              "name": "Blogging"

                            }

                          },

                          {

                            "type": "application",

                            "value": {

                              "id": "meraki:layer7/application/133",

                              "name": "Battle.net"

                            }

                          }

                        ],

                        "perClientBandwidthLimits": {

                          "settings": "custom",

                          "bandwidthLimits": {

                            "limitUp": 1000000,

                            "limitDown": 1000000

                          }

                        },

                        "dscpTagValue": null,

                        "pcpTagValue": null

                      }

                    ],

                    "l3FirewallRules": [

                      {

                        "comment": "Allow TCP traffic to subnet with HTTP servers.",

                        "policy": "allow",

                        "protocol": "tcp",

                        "destPort": 443,

                        "destCidr": "192.168.1.0/24"

                      }

                    ],

                    "l7FirewallRules": [

                      [

                        {

                          "policy": "deny",

                          "type": "application",

                          "value": {

                            "id": "meraki:layer7/application/67",

                            "name": "Xbox LIVE"

                          }

                        },

                        {

                          "policy": "deny",

                          "type": "applicationCategory",

                          "value": {

                            "id": "meraki:layer7/category/2",

                            "name": "Blogging"

                          }

                        },

                        {

                          "policy": "deny",

                          "type": "host",

                          "value": "google.com"

                        },

                        {

                          "policy": "deny",

                          "type": "port",

                          "value": "23"

                        },

                        {

                          "policy": "deny",

                          "type": "ipRange",

                          "value": "10.11.12.00/24"

                        },

                        {

                          "policy": "deny",

                          "type": "ipRange",

                          "value": "10.11.12.00/24:5555"

                        },

                        {

                          "policy": "deny",

                          "type": "blacklistedCountries",

                          "value": [

                            "AX",

                            "CA"

                          ]

                        },

                        {

                          "policy": "deny",

                          "type": "whitelistedCountries",

                          "value": [

                            "US"

                          ]

                        }

                      ]

                    ]

                  },

                  "contentFiltering": {

                    "allowedUrlPatterns": {

                      "settings": "network default",

                      "patterns": []

                    },

                    "blockedUrlPatterns": {

                      "settings": "append",

                      "patterns": [

                        "http://www.example.com",

                        "http://www.betting.com"

                      ]

                    },

                    "blockedUrlCategories": {

                      "settings": "override",

                      "categories": [

                        "meraki:contentFiltering/category/1",

                        "meraki:contentFiltering/category/7"

                      ]

                    }

                  },

                  "splashAuthSettings": "bypass",

                  "vlanTagging": {

                    "settings": "custom",

                    "vlanId": "1"

                  },

                  "bonjourForwarding": {

                    "settings": "custom",

                    "rules": [

                      {

                        "description": "A simple bonjour rule",

                        "vlanId": "1",

                        "services": [

                          "All Services"

                        ]

                      }

                    ]

                  }

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/httpServers/{id}":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - HTTP servers
      summary: getNetworkHttpServer
      description: Returns an HTTP server for a network.
      operationId: getNetworkHttpServer
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "id": "ABC123",

                    "networkId": "N_123",

                    "name": "My HTTP server",

                    "url": "https://www.example.com/webhooks",

                    "sharedSecret": "foobar"

                  }
              example: |-
                {

                  "id": "ABC123",

                  "networkId": "N_123",

                  "name": "My HTTP server",

                  "url": "https://www.example.com/webhooks",

                  "sharedSecret": "foobar"

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/httpServers":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - HTTP servers
      summary: getNetworkHttpServers
      description: Lists the HTTP servers for a network.
      operationId: getNetworkHttpServers
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "id": "ABC123",

                      "networkId": "N_123",

                      "name": "My HTTP server",

                      "url": "https://www.example.com/webhooks",

                      "sharedSecret": "foobar"

                    }

                  ]
              example: |-
                [

                  {

                    "id": "ABC123",

                    "networkId": "N_123",

                    "name": "My HTTP server",

                    "url": "https://www.example.com/webhooks",

                    "sharedSecret": "foobar"

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/httpServers/webhookTests/{id}":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - HTTP servers
      summary: getNetworkHttpServersWebhookTest
      description: Returns the status of a webhook test for a network.
      operationId: getNetworkHttpServersWebhookTest
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "id": "1234",

                    "url": "https://www.example.com/path",

                    "status": "delivered"

                  }
              example: |-
                {

                  "id": "1234",

                  "url": "https://www.example.com/path",

                  "status": "delivered"

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/organizations/{organizationId}/security/intrusionSettings":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Intrusion settings
      summary: getOrganizationSecurityIntrusionSettings
      description: Returns all supported intrusion settings for an organization
      operationId: getOrganizationSecurityIntrusionSettings
      parameters:
        - name: organizationId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "whitelistedRules": [

                      {

                        "ruleId": "meraki:intrusion/snort/GID/01/SID/688",

                        "message": "SQL sa login failed"

                      },

                      {

                        "ruleId": "meraki:intrusion/snort/GID/01/SID/5805",

                        "message": "MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines"

                      }

                    ]

                  }
              example: |-
                {

                  "whitelistedRules": [

                    {

                      "ruleId": "meraki:intrusion/snort/GID/01/SID/688",

                      "message": "SQL sa login failed"

                    },

                    {

                      "ruleId": "meraki:intrusion/snort/GID/01/SID/5805",

                      "message": "MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines"

                    }

                  ]

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/security/intrusionSettings":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Intrusion settings
      summary: getNetworkSecurityIntrusionSettings
      description: Returns all supported intrusion settings for an MX network.
      operationId: getNetworkSecurityIntrusionSettings
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "mode": "prevention",

                    "idsRulesets": "balanced",

                    "protectedNetworks": {

                      "useDefault": false,

                      "includedCidr": [

                        "10.0.0.0/8",

                        "127.0.0.0/8",

                        "169.254.0.0/16",

                        "172.16.0.0/12"

                      ],

                      "excludedCidr": [

                        "10.0.0.0/8",

                        "127.0.0.0/8"

                      ]

                    }

                  }
              example: |-
                {

                  "mode": "prevention",

                  "idsRulesets": "balanced",

                  "protectedNetworks": {

                    "useDefault": false,

                    "includedCidr": [

                      "10.0.0.0/8",

                      "127.0.0.0/8",

                      "169.254.0.0/16",

                      "172.16.0.0/12"

                    ],

                    "excludedCidr": [

                      "10.0.0.0/8",

                      "127.0.0.0/8"

                    ]

                  }

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/switch/linkAggregations":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Link aggregations
      summary: getNetworkSwitchLinkAggregations
      description: Lists link aggregation groups.
      operationId: getNetworkSwitchLinkAggregations
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "id": "NDU2N18yXzM=",

                      "switchPorts": [

                        {

                          "serial": "Q234-ABCD-0001",

                          "portId": "1"

                        },

                        {

                          "serial": "Q234-ABCD-0002",

                          "portId": "2"

                        },

                        {

                          "serial": "Q234-ABCD-0003",

                          "portId": "3"

                        },

                        {

                          "serial": "Q234-ABCD-0004",

                          "portId": "4"

                        },

                        {

                          "serial": "Q234-ABCD-0005",

                          "portId": "5"

                        },

                        {

                          "serial": "Q234-ABCD-0006",

                          "portId": "6"

                        },

                        {

                          "serial": "Q234-ABCD-0007",

                          "portId": "7"

                        },

                        {

                          "serial": "Q234-ABCD-0008",

                          "portId": "8"

                        }

                      ]

                    }

                  ]
              example: |-
                [

                  {

                    "id": "NDU2N18yXzM=",

                    "switchPorts": [

                      {

                        "serial": "Q234-ABCD-0001",

                        "portId": "1"

                      },

                      {

                        "serial": "Q234-ABCD-0002",

                        "portId": "2"

                      },

                      {

                        "serial": "Q234-ABCD-0003",

                        "portId": "3"

                      },

                      {

                        "serial": "Q234-ABCD-0004",

                        "portId": "4"

                      },

                      {

                        "serial": "Q234-ABCD-0005",

                        "portId": "5"

                      },

                      {

                        "serial": "Q234-ABCD-0006",

                        "portId": "6"

                      },

                      {

                        "serial": "Q234-ABCD-0007",

                        "portId": "7"

                      },

                      {

                        "serial": "Q234-ABCD-0008",

                        "portId": "8"

                      }

                    ]

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/cellularGateway/settings/dhcp":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - MG DHCP settings
      summary: getNetworkCellularGatewaySettingsDhcp
      description: Lists common DHCP settings of MGs.
      operationId: getNetworkCellularGatewaySettingsDhcp
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "dhcpLeaseTime": "1 hour",

                    "dnsNameservers": "custom",

                    "dnsCustomNameservers": [

                      "172.16.2.111",

                      "172.16.2.30"

                    ]

                  }
              example: |-
                {

                  "dhcpLeaseTime": "1 hour",

                  "dnsNameservers": "custom",

                  "dnsCustomNameservers": [

                    "172.16.2.111",

                    "172.16.2.30"

                  ]

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/devices/{serial}/cellularGateway/settings":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - MG LAN settings
      summary: getDeviceCellularGatewaySettings
      description: Shows the LAN Settings of a MG.
      operationId: getDeviceCellularGatewaySettings
      parameters:
        - name: serial
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "deviceName": "name of the MG",

                    "deviceLanIp": "192.168.0.33",

                    "deviceSubnet": "192.168.0.32/27",

                    "fixedIpAssignments": [

                      {

                        "mac": "0b:00:00:00:00:ac",

                        "name": "server 1",

                        "ip": "192.168.0.10"

                      },

                      {

                        "mac": "0b:00:00:00:00:ab",

                        "name": "server 2",

                        "ip": "192.168.0.20"

                      }

                    ],

                    "reservedIpRanges": [

                      {

                        "start": "192.168.1.0",

                        "end": "192.168.1.1",

                        "comment": "A reserved IP range"

                      }

                    ]

                  }
              example: |-
                {

                  "deviceName": "name of the MG",

                  "deviceLanIp": "192.168.0.33",

                  "deviceSubnet": "192.168.0.32/27",

                  "fixedIpAssignments": [

                    {

                      "mac": "0b:00:00:00:00:ac",

                      "name": "server 1",

                      "ip": "192.168.0.10"

                    },

                    {

                      "mac": "0b:00:00:00:00:ab",

                      "name": "server 2",

                      "ip": "192.168.0.20"

                    }

                  ],

                  "reservedIpRanges": [

                    {

                      "start": "192.168.1.0",

                      "end": "192.168.1.1",

                      "comment": "A reserved IP range"

                    }

                  ]

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  ? "/networks/{networkId}/cellularGateway/settings/connectivityMonitoringDestinations"
  : 
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - MG connectivity monitoring destinations
      summary: getNetworkCellularGatewaySettingsConnectivityMonitoringDestinations
      description: Returns the connectivity testing destinations for an MG network.
      operationId: getNetworkCellularGatewaySettingsConnectivityMonitoringDestinations
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "destinations": [

                      {

                        "ip": "8.8.8.8",

                        "description": "Google",

                        "default": false

                      },

                      {

                        "ip": "1.23.45.67",

                        "description": "test description",

                        "default": true

                      },

                      {

                        "ip": "9.8.7.6",

                        "description": null,

                        "default": false

                      }

                    ]

                  }
              example: |-
                {

                  "destinations": [

                    {

                      "ip": "8.8.8.8",

                      "description": "Google",

                      "default": false

                    },

                    {

                      "ip": "1.23.45.67",

                      "description": "test description",

                      "default": true

                    },

                    {

                      "ip": "9.8.7.6",

                      "description": null,

                      "default": false

                    }

                  ]

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/devices/{serial}/cellularGateway/settings/portForwardingRules":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - MG port forwarding rules
      summary: getDeviceCellularGatewaySettingsPortForwardingRules
      description: Returns the port forwarding rules for a single MG.
      operationId: getDeviceCellularGatewaySettingsPortForwardingRules
      parameters:
        - name: serial
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "rules": [

                      {

                        "lanIp": "172.31.128.5",

                        "name": "test",

                        "access": "any",

                        "publicPort": "11-12",

                        "localPort": "4",

                        "uplink": "both",

                        "protocol": "tcp"

                      },

                      {

                        "lanIp": "172.31.128.5",

                        "name": "test 2",

                        "access": "restricted",

                        "allowedIps": [

                          "10.10.10.10",

                          "10.10.10.11"

                        ],

                        "publicPort": "99",

                        "localPort": "5",

                        "uplink": "both",

                        "protocol": "tcp"

                      }

                    ]

                  }
              example: |-
                {

                  "rules": [

                    {

                      "lanIp": "172.31.128.5",

                      "name": "test",

                      "access": "any",

                      "publicPort": "11-12",

                      "localPort": "4",

                      "uplink": "both",

                      "protocol": "tcp"

                    },

                    {

                      "lanIp": "172.31.128.5",

                      "name": "test 2",

                      "access": "restricted",

                      "allowedIps": [

                        "10.10.10.10",

                        "10.10.10.11"

                      ],

                      "publicPort": "99",

                      "localPort": "5",

                      "uplink": "both",

                      "protocol": "tcp"

                    }

                  ]

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/cellularGateway/settings/subnetPool":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - MG subnet pool settings
      summary: getNetworkCellularGatewaySettingsSubnetPool
      description: Returns the subnet pool and mask configured for MGs in the network.
      operationId: getNetworkCellularGatewaySettingsSubnetPool
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "cidr": "192.168.0.0/16",

                    "mask": "24",

                    "subnets": [

                      {

                        "serial": "AAAA-AAAA-AAAA",

                        "name": "my first MG",

                        "applianceIp": "192.168.0.1",

                        "subnet": "192.168.0.0/24"

                      },

                      {

                        "serial": "BBBB-BBBB-BBBB",

                        "name": "my second MG",

                        "applianceIp": "192.168.0.33",

                        "subnet": "192.168.0.32/24"

                      }

                    ]

                  }
              example: |-
                {

                  "cidr": "192.168.0.0/16",

                  "mask": "24",

                  "subnets": [

                    {

                      "serial": "AAAA-AAAA-AAAA",

                      "name": "my first MG",

                      "applianceIp": "192.168.0.1",

                      "subnet": "192.168.0.0/24"

                    },

                    {

                      "serial": "BBBB-BBBB-BBBB",

                      "name": "my second MG",

                      "applianceIp": "192.168.0.33",

                      "subnet": "192.168.0.32/24"

                    }

                  ]

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/cellularGateway/settings/uplink":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - MG uplink settings
      summary: getNetworkCellularGatewaySettingsUplink
      description: Returns the uplink settings for your MG network.
      operationId: getNetworkCellularGatewaySettingsUplink
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "bandwidthLimits": {

                      "limitUp": 51200,

                      "limitDown": 51200

                    }

                  }
              example: |-
                {

                  "bandwidthLimits": {

                    "limitUp": 51200,

                    "limitDown": 51200

                  }

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/ssids/{number}/l3FirewallRules":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - MR L3 firewall
      summary: getNetworkSsidL3FirewallRules
      description: Returns the L3 firewall rules for an SSID on an MR network.
      operationId: getNetworkSsidL3FirewallRules
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: number
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "comment": "Allow TCP traffic to subnet with HTTP servers.",

                      "policy": "allow",

                      "protocol": "tcp",

                      "destPort": 443,

                      "destCidr": "192.168.1.0/24"

                    }

                  ]
              example: |-
                [

                  {

                    "comment": "Allow TCP traffic to subnet with HTTP servers.",

                    "policy": "allow",

                    "protocol": "tcp",

                    "destPort": 443,

                    "destCidr": "192.168.1.0/24"

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/devices/{serial}/camera/analytics/overview":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - MV Sense
      summary: getDeviceCameraAnalyticsOverview
      description: Returns an overview of aggregate analytics data for a timespan.
      operationId: getDeviceCameraAnalyticsOverview
      parameters:
        - name: serial
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: t0
          in: query
          description: The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
          style: form
          explode: true
          schema:
            type: string
        - name: t1
          in: query
          description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
          style: form
          explode: true
          schema:
            type: string
        - name: timespan
          in: query
          description: "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 1 hour."
          style: form
          explode: true
          schema:
            type: number
            format: double
        - name: objectType
          in: query
          description: "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle]."
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/objectType"
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "startTs": "2018-08-15T18:32:38.123Z",

                      "endTs": "2018-08-15T18:33:38.123Z",

                      "zoneId": 0,

                      "entrances": 254,

                      "averageCount": 5

                    }

                  ]
              example: |-
                [

                  {

                    "startTs": "2018-08-15T18:32:38.123Z",

                    "endTs": "2018-08-15T18:33:38.123Z",

                    "zoneId": 0,

                    "entrances": 254,

                    "averageCount": 5

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/devices/{serial}/camera/analytics/live":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - MV Sense
      summary: getDeviceCameraAnalyticsLive
      description: Returns live state from camera of analytics zones.
      operationId: getDeviceCameraAnalyticsLive
      parameters:
        - name: serial
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "ts": "2018-08-15T18:32:38.123Z",

                    "zones": {

                      "0": {

                        "person": 0

                      }

                    }

                  }
              example: |-
                {

                  "ts": "2018-08-15T18:32:38.123Z",

                  "zones": {

                    "0": {

                      "person": 0

                    }

                  }

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/devices/{serial}/camera/analytics/zones/{zoneId}/history":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - MV Sense
      summary: getDeviceCameraAnalyticsZoneHistory
      description: Returns historical records for analytic zones.
      operationId: getDeviceCameraAnalyticsZoneHistory
      parameters:
        - name: serial
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: zoneId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: t0
          in: query
          description: The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
          style: form
          explode: true
          schema:
            type: string
        - name: t1
          in: query
          description: The end of the timespan for the data. t1 can be a maximum of 14 hours after t0.
          style: form
          explode: true
          schema:
            type: string
        - name: timespan
          in: query
          description: "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 14 hours. The default is 1 hour."
          style: form
          explode: true
          schema:
            type: number
            format: double
        - name: resolution
          in: query
          description: "The time resolution in seconds for returned data. The valid resolutions are: 60. The default is 60."
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: objectType
          in: query
          description: "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle]."
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/objectType"
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "startTs": "2018-08-15T18:32:38.123Z",

                      "endTs": "2018-08-15T18:33:38.123Z",

                      "entrances": 5,

                      "averageCount": 1.5

                    }

                  ]
              example: |-
                [

                  {

                    "startTs": "2018-08-15T18:32:38.123Z",

                    "endTs": "2018-08-15T18:33:38.123Z",

                    "entrances": 5,

                    "averageCount": 1.5

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/devices/{serial}/camera/analytics/recent":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - MV Sense
      summary: getDeviceCameraAnalyticsRecent
      description: Returns most recent record for analytics zones.
      operationId: getDeviceCameraAnalyticsRecent
      parameters:
        - name: serial
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: objectType
          in: query
          description: "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle]."
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/objectType"
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "startTs": "2018-08-15T18:32:38.123Z",

                      "endTs": "2018-08-15T18:33:38.123Z",

                      "zoneId": 0,

                      "entrances": 10,

                      "averageCount": 2.54

                    }

                  ]
              example: |-
                [

                  {

                    "startTs": "2018-08-15T18:32:38.123Z",

                    "endTs": "2018-08-15T18:33:38.123Z",

                    "zoneId": 0,

                    "entrances": 10,

                    "averageCount": 2.54

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/devices/{serial}/camera/analytics/zones":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - MV Sense
      summary: getDeviceCameraAnalyticsZones
      description: Returns all configured analytic zones for this camera.
      operationId: getDeviceCameraAnalyticsZones
      parameters:
        - name: serial
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "id": "0",

                      "type": "occupancy",

                      "label": "Full Frame",

                      "regionOfInterest": {

                        "x0": "0.00",

                        "y0": "0.00",

                        "x1": "1.00",

                        "y1": "1.00"

                      }

                    }

                  ]
              example: |-
                [

                  {

                    "id": "0",

                    "type": "occupancy",

                    "label": "Full Frame",

                    "regionOfInterest": {

                      "x0": "0.00",

                      "y0": "0.00",

                      "x1": "1.00",

                      "y1": "1.00"

                    }

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/oneToOneNatRules":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - "MX 1:1 NAT rules"
      summary: getNetworkOneToOneNatRules
      description: "Returns the 1:1 NAT mapping rules for an MX network."
      operationId: getNetworkOneToOneNatRules
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "rules": [

                      {

                        "name": "Service behind NAT",

                        "lanIp": "192.168.128.22",

                        "publicIp": "146.12.3.33",

                        "uplink": "internet1",

                        "allowedInbound": [

                          {

                            "protocol": "tcp",

                            "destinationPorts": [

                              "80"

                            ],

                            "allowedIps": [

                              "10.82.112.0/24",

                              "10.82.0.0/16"

                            ]

                          },

                          {

                            "protocol": "udp",

                            "destinationPorts": [

                              "8080"

                            ],

                            "allowedIps": [

                              "10.81.110.5",

                              "10.81.0.0/16"

                            ]

                          }

                        ]

                      }

                    ]

                  }
              example: |-
                {

                  "rules": [

                    {

                      "name": "Service behind NAT",

                      "lanIp": "192.168.128.22",

                      "publicIp": "146.12.3.33",

                      "uplink": "internet1",

                      "allowedInbound": [

                        {

                          "protocol": "tcp",

                          "destinationPorts": [

                            "80"

                          ],

                          "allowedIps": [

                            "10.82.112.0/24",

                            "10.82.0.0/16"

                          ]

                        },

                        {

                          "protocol": "udp",

                          "destinationPorts": [

                            "8080"

                          ],

                          "allowedIps": [

                            "10.81.110.5",

                            "10.81.0.0/16"

                          ]

                        }

                      ]

                    }

                  ]

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/oneToManyNatRules":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - "MX 1:Many NAT rules"
      summary: getNetworkOneToManyNatRules
      description: "Returns the 1:Many NAT mapping rules for an MX network."
      operationId: getNetworkOneToManyNatRules
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "rules": [

                      {

                        "publicIp": "146.11.11.13",

                        "uplink": "internet1",

                        "portRules": [

                          {

                            "name": "Rule 1",

                            "protocol": "tcp",

                            "publicPort": "9443",

                            "localIp": "192.168.128.1",

                            "localPort": "443",

                            "allowedIps": [

                              "any"

                            ]

                          },

                          {

                            "name": "Rule 2",

                            "protocol": "tcp",

                            "publicPort": "8080",

                            "localIp": "192.168.128.1",

                            "localPort": "80",

                            "allowedIps": [

                              "10.82.110.0/24",

                              "10.82.111.0/24"

                            ]

                          }

                        ]

                      }

                    ]

                  }
              example: |-
                {

                  "rules": [

                    {

                      "publicIp": "146.11.11.13",

                      "uplink": "internet1",

                      "portRules": [

                        {

                          "name": "Rule 1",

                          "protocol": "tcp",

                          "publicPort": "9443",

                          "localIp": "192.168.128.1",

                          "localPort": "443",

                          "allowedIps": [

                            "any"

                          ]

                        },

                        {

                          "name": "Rule 2",

                          "protocol": "tcp",

                          "publicPort": "8080",

                          "localIp": "192.168.128.1",

                          "localPort": "80",

                          "allowedIps": [

                            "10.82.110.0/24",

                            "10.82.111.0/24"

                          ]

                        }

                      ]

                    }

                  ]

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/l3FirewallRules":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - MX L3 firewall
      summary: getNetworkL3FirewallRules
      description: Returns the L3 firewall rules for an MX network.
      operationId: getNetworkL3FirewallRules
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "comment": "Allow TCP traffic to subnet with HTTP servers.",

                      "policy": "allow",

                      "protocol": "tcp",

                      "destPort": 443,

                      "destCidr": "192.168.1.0/24",

                      "srcPort": "Any",

                      "srcCidr": "Any",

                      "syslogEnabled": false

                    }

                  ]
              example: |-
                [

                  {

                    "comment": "Allow TCP traffic to subnet with HTTP servers.",

                    "policy": "allow",

                    "protocol": "tcp",

                    "destPort": 443,

                    "destCidr": "192.168.1.0/24",

                    "srcPort": "Any",

                    "srcCidr": "Any",

                    "syslogEnabled": false

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/l7FirewallRules/applicationCategories":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - MX L7 application categories
      summary: getNetworkL7FirewallRulesApplicationCategories
      description: Returns the L7 firewall application categories and their associated applications for an MX network.
      operationId: getNetworkL7FirewallRulesApplicationCategories
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "applicationCategories": [

                        {

                          "id": "meraki:layer7/category/24",

                          "name": "Advertising",

                          "applications": [

                            {

                              "id": "meraki:layer7/application/5",

                              "name": "Advertising.com"

                            },

                            {

                              "id": "meraki:layer7/application/0",

                              "name": "AppNexus"

                            },

                            {

                              "id": "meraki:layer7/application/1",

                              "name": "Brightroll"

                            }

                          ]

                        }

                      ]

                    }

                  ]
              example: |-
                [

                  {

                    "applicationCategories": [

                      {

                        "id": "meraki:layer7/category/24",

                        "name": "Advertising",

                        "applications": [

                          {

                            "id": "meraki:layer7/application/5",

                            "name": "Advertising.com"

                          },

                          {

                            "id": "meraki:layer7/application/0",

                            "name": "AppNexus"

                          },

                          {

                            "id": "meraki:layer7/application/1",

                            "name": "Brightroll"

                          }

                        ]

                      }

                    ]

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/l7FirewallRules":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - MX L7 firewall
      summary: getNetworkL7FirewallRules
      description: Lists the MX L7 firewall rules for an MX network.
      operationId: getNetworkL7FirewallRules
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "rules": [

                      {

                        "policy": "deny",

                        "type": "application",

                        "value": {

                          "id": "meraki:layer7/application/67",

                          "name": "Xbox LIVE"

                        }

                      },

                      {

                        "policy": "deny",

                        "type": "applicationCategory",

                        "value": {

                          "id": "meraki:layer7/category/2",

                          "name": "Blogging"

                        }

                      },

                      {

                        "policy": "deny",

                        "type": "host",

                        "value": "google.com"

                      },

                      {

                        "policy": "deny",

                        "type": "port",

                        "value": "23"

                      },

                      {

                        "policy": "deny",

                        "type": "ipRange",

                        "value": "10.11.12.00/24"

                      },

                      {

                        "policy": "deny",

                        "type": "ipRange",

                        "value": "10.11.12.00/24:5555"

                      },

                      {

                        "policy": "deny",

                        "type": "blacklistedCountries",

                        "value": [

                          "AX",

                          "CA"

                        ]

                      },

                      {

                        "policy": "deny",

                        "type": "whitelistedCountries",

                        "value": [

                          "US"

                        ]

                      }

                    ]

                  }
              example: |-
                {

                  "rules": [

                    {

                      "policy": "deny",

                      "type": "application",

                      "value": {

                        "id": "meraki:layer7/application/67",

                        "name": "Xbox LIVE"

                      }

                    },

                    {

                      "policy": "deny",

                      "type": "applicationCategory",

                      "value": {

                        "id": "meraki:layer7/category/2",

                        "name": "Blogging"

                      }

                    },

                    {

                      "policy": "deny",

                      "type": "host",

                      "value": "google.com"

                    },

                    {

                      "policy": "deny",

                      "type": "port",

                      "value": "23"

                    },

                    {

                      "policy": "deny",

                      "type": "ipRange",

                      "value": "10.11.12.00/24"

                    },

                    {

                      "policy": "deny",

                      "type": "ipRange",

                      "value": "10.11.12.00/24:5555"

                    },

                    {

                      "policy": "deny",

                      "type": "blacklistedCountries",

                      "value": [

                        "AX",

                        "CA"

                      ]

                    },

                    {

                      "policy": "deny",

                      "type": "whitelistedCountries",

                      "value": [

                        "US"

                      ]

                    }

                  ]

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/appliancePorts/{appliancePortId}":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - MX VLAN ports
      summary: getNetworkAppliancePort
      description: Returns per-port VLAN settings for a single MX port.
      operationId: getNetworkAppliancePort
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: appliancePortId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "number": 1,

                    "enabled": true,

                    "type": "access",

                    "dropUntaggedTraffic": false,

                    "vlan": 3,

                    "accessPolicy": "open"

                  }
              example: |-
                {

                  "number": 1,

                  "enabled": true,

                  "type": "access",

                  "dropUntaggedTraffic": false,

                  "vlan": 3,

                  "accessPolicy": "open"

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/appliancePorts":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - MX VLAN ports
      summary: getNetworkAppliancePorts
      description: Lists per-port VLAN settings for all ports of a MX.
      operationId: getNetworkAppliancePorts
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "number": 1,

                      "enabled": true,

                      "type": "access",

                      "dropUntaggedTraffic": false,

                      "vlan": 3,

                      "accessPolicy": "open"

                    }

                  ]
              example: |-
                [

                  {

                    "number": 1,

                    "enabled": true,

                    "type": "access",

                    "dropUntaggedTraffic": false,

                    "vlan": 3,

                    "accessPolicy": "open"

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/organizations/{organizationId}/vpnFirewallRules":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - MX VPN firewall
      summary: getOrganizationVpnFirewallRules
      description: "Returns the firewall rules for an organization's site-to-site VPN."
      operationId: getOrganizationVpnFirewallRules
      parameters:
        - name: organizationId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "comment": "Allow TCP traffic to subnet with HTTP servers.",

                      "policy": "allow",

                      "protocol": "tcp",

                      "destPort": 443,

                      "destCidr": "192.168.1.0/24",

                      "srcPort": "Any",

                      "srcCidr": "Any",

                      "syslogEnabled": false

                    }

                  ]
              example: |-
                [

                  {

                    "comment": "Allow TCP traffic to subnet with HTTP servers.",

                    "policy": "allow",

                    "protocol": "tcp",

                    "destPort": 443,

                    "destCidr": "192.168.1.0/24",

                    "srcPort": "Any",

                    "srcCidr": "Any",

                    "syslogEnabled": false

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/cellularFirewallRules":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - MX cellular firewall
      summary: getNetworkCellularFirewallRules
      description: Returns the cellular firewall rules for an MX network.
      operationId: getNetworkCellularFirewallRules
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "comment": "Allow TCP traffic to subnet with HTTP servers.",

                      "policy": "allow",

                      "protocol": "tcp",

                      "destPort": 443,

                      "destCidr": "192.168.1.0/24",

                      "srcPort": "Any",

                      "srcCidr": "Any",

                      "syslogEnabled": false

                    }

                  ]
              example: |-
                [

                  {

                    "comment": "Allow TCP traffic to subnet with HTTP servers.",

                    "policy": "allow",

                    "protocol": "tcp",

                    "destPort": 443,

                    "destCidr": "192.168.1.0/24",

                    "srcPort": "Any",

                    "srcCidr": "Any",

                    "syslogEnabled": false

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/appliance/firewall/inboundFirewallRules":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - MX inbound firewall
      summary: getNetworkApplianceFirewallInboundFirewallRules
      description: Returns the inbound firewall rules for an MX network.
      operationId: getNetworkApplianceFirewallInboundFirewallRules
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "rules": [

                      {

                        "comment": "Allow TCP traffic to subnet with HTTP servers.",

                        "policy": "allow",

                        "protocol": "tcp",

                        "destPort": 443,

                        "destCidr": "192.168.1.0/24",

                        "srcPort": "Any",

                        "srcCidr": "Any",

                        "syslogEnabled": false

                      }

                    ],

                    "syslogDefaultRule": true

                  }
              example: |-
                {

                  "rules": [

                    {

                      "comment": "Allow TCP traffic to subnet with HTTP servers.",

                      "policy": "allow",

                      "protocol": "tcp",

                      "destPort": 443,

                      "destCidr": "192.168.1.0/24",

                      "srcPort": "Any",

                      "srcCidr": "Any",

                      "syslogEnabled": false

                    }

                  ],

                  "syslogDefaultRule": true

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/portForwardingRules":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - MX port forwarding rules
      summary: getNetworkPortForwardingRules
      description: Returns the port forwarding rules for an MX network.
      operationId: getNetworkPortForwardingRules
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "rules": [

                      {

                        "lanIp": "192.168.128.1",

                        "allowedIps": [

                          "any"

                        ],

                        "name": "Description of Port Forwarding Rule",

                        "protocol": "tcp",

                        "publicPort": "8100-8101",

                        "localPort": "442-443",

                        "uplink": "both"

                      }

                    ]

                  }
              example: |-
                {

                  "rules": [

                    {

                      "lanIp": "192.168.128.1",

                      "allowedIps": [

                        "any"

                      ],

                      "name": "Description of Port Forwarding Rule",

                      "protocol": "tcp",

                      "publicPort": "8100-8101",

                      "localPort": "442-443",

                      "uplink": "both"

                    }

                  ]

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/staticRoutes":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - MX static routes
      summary: getNetworkStaticRoutes
      description: Lists the static routes for an MX or teleworker network.
      operationId: getNetworkStaticRoutes
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",

                      "networkId": "N_24329156",

                      "enabled": true,

                      "name": "My route",

                      "subnet": "192.168.1.0/24",

                      "gatewayIp": "1.2.3.5",

                      "fixedIpAssignments": {

                        "22:33:44:55:66:77": {

                          "ip": "1.2.3.4",

                          "name": "Some client name"

                        }

                      },

                      "reservedIpRanges": [

                        {

                          "start": "192.168.1.0",

                          "end": "192.168.1.1",

                          "comment": "A reserved IP range"

                        }

                      ]

                    }

                  ]
              example: |-
                [

                  {

                    "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",

                    "networkId": "N_24329156",

                    "enabled": true,

                    "name": "My route",

                    "subnet": "192.168.1.0/24",

                    "gatewayIp": "1.2.3.5",

                    "fixedIpAssignments": {

                      "22:33:44:55:66:77": {

                        "ip": "1.2.3.4",

                        "name": "Some client name"

                      }

                    },

                    "reservedIpRanges": [

                      {

                        "start": "192.168.1.0",

                        "end": "192.168.1.1",

                        "comment": "A reserved IP range"

                      }

                    ]

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/staticRoutes/{staticRouteId}":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - MX static routes
      summary: getNetworkStaticRoute
      description: Returns a static route for an MX or teleworker network.
      operationId: getNetworkStaticRoute
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: staticRouteId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",

                    "networkId": "N_24329156",

                    "enabled": true,

                    "name": "My route",

                    "subnet": "192.168.1.0/24",

                    "gatewayIp": "1.2.3.5",

                    "fixedIpAssignments": {

                      "22:33:44:55:66:77": {

                        "ip": "1.2.3.4",

                        "name": "Some client name"

                      }

                    },

                    "reservedIpRanges": [

                      {

                        "start": "192.168.1.0",

                        "end": "192.168.1.1",

                        "comment": "A reserved IP range"

                      }

                    ]

                  }
              example: |-
                {

                  "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",

                  "networkId": "N_24329156",

                  "enabled": true,

                  "name": "My route",

                  "subnet": "192.168.1.0/24",

                  "gatewayIp": "1.2.3.5",

                  "fixedIpAssignments": {

                    "22:33:44:55:66:77": {

                      "ip": "1.2.3.4",

                      "name": "Some client name"

                    }

                  },

                  "reservedIpRanges": [

                    {

                      "start": "192.168.1.0",

                      "end": "192.168.1.1",

                      "comment": "A reserved IP range"

                    }

                  ]

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/warmSpareSettings":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - MX warm spare settings
      summary: getNetworkWarmSpareSettings
      description: Returns MX warm spare settings.
      operationId: getNetworkWarmSpareSettings
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "enabled": true,

                    "primarySerial": "Q234-ABCD-5678",

                    "spareSerial": "Q234-ABCD-5678",

                    "uplinkMode": "virtual",

                    "wan1": {

                      "ip": "1.2.3.4",

                      "subnet": "192.168.1.0/24"

                    },

                    "wan2": {

                      "ip": "1.2.3.4",

                      "subnet": "192.168.128.0/24"

                    }

                  }
              example: |-
                {

                  "enabled": true,

                  "primarySerial": "Q234-ABCD-5678",

                  "spareSerial": "Q234-ABCD-5678",

                  "uplinkMode": "virtual",

                  "wan1": {

                    "ip": "1.2.3.4",

                    "subnet": "192.168.1.0/24"

                  },

                  "wan2": {

                    "ip": "1.2.3.4",

                    "subnet": "192.168.128.0/24"

                  }

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/security/malwareSettings":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Malware settings
      summary: getNetworkSecurityMalwareSettings
      description: Returns all supported malware settings for an MX network.
      operationId: getNetworkSecurityMalwareSettings
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "mode": "enabled",

                    "allowedUrls": [

                      {

                        "url": "example.org",

                        "comment": "allow example.org"

                      },

                      {

                        "url": "help.com.au",

                        "comment": "allow help.com.au"

                      }

                    ],

                    "allowedFiles": [

                      {

                        "sha256": "e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503",

                        "comment": "allow ZIP file"

                      }

                    ]

                  }
              example: |-
                {

                  "mode": "enabled",

                  "allowedUrls": [

                    {

                      "url": "example.org",

                      "comment": "allow example.org"

                    },

                    {

                      "url": "help.com.au",

                      "comment": "allow help.com.au"

                    }

                  ],

                  "allowedFiles": [

                    {

                      "sha256": "e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503",

                      "comment": "allow ZIP file"

                    }

                  ]

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/devices/{serial}/managementInterfaceSettings":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Management interface settings
      summary: getNetworkDeviceManagementInterfaceSettings
      description: Returns the management interface settings for a device.
      operationId: getNetworkDeviceManagementInterfaceSettings
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: serial
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "ddnsHostnames": {

                      "activeDdnsHostname": "mx1-sample.dynamic-m.com",

                      "ddnsHostnameWan1": "mx1-sample-1.dynamic-m.com",

                      "ddnsHostnameWan2": "mx1-sample-2.dynamic-m.com"

                    },

                    "wan1": {

                      "wanEnabled": "not configured",

                      "usingStaticIp": true,

                      "staticIp": "1.2.3.4",

                      "staticSubnetMask": "255.255.255.0",

                      "staticGatewayIp": "1.2.3.1",

                      "staticDns": [

                        "1.2.3.2",

                        "1.2.3.3"

                      ],

                      "vlan": 7

                    },

                    "wan2": {

                      "wanEnabled": "enabled",

                      "usingStaticIp": false,

                      "vlan": 2

                    }

                  }
              example: |-
                {

                  "ddnsHostnames": {

                    "activeDdnsHostname": "mx1-sample.dynamic-m.com",

                    "ddnsHostnameWan1": "mx1-sample-1.dynamic-m.com",

                    "ddnsHostnameWan2": "mx1-sample-2.dynamic-m.com"

                  },

                  "wan1": {

                    "wanEnabled": "not configured",

                    "usingStaticIp": true,

                    "staticIp": "1.2.3.4",

                    "staticSubnetMask": "255.255.255.0",

                    "staticGatewayIp": "1.2.3.1",

                    "staticDns": [

                      "1.2.3.2",

                      "1.2.3.3"

                    ],

                    "vlan": 7

                  },

                  "wan2": {

                    "wanEnabled": "enabled",

                    "usingStaticIp": false,

                    "vlan": 2

                  }

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Meraki auth users
      summary: getNetworkMerakiAuthUser
      description: Returns the Meraki Auth splash or RADIUS user.
      operationId: getNetworkMerakiAuthUser
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: merakiAuthUserId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "id": "aGlAaGkuY29t",

                    "email": "miles@meraki.com",

                    "name": "Miles Meraki",

                    "createdAt": 1518365681,

                    "accountType": "Guest",

                    "authorizations": [

                      {

                        "authorizedZone": "Store WiFi",

                        "expiresAt": 1526087474,

                        "authorizedByName": "Miles Meraki",

                        "authorizedByEmail": "miles@meraki.com"

                      }

                    ]

                  }
              example: |-
                {

                  "id": "aGlAaGkuY29t",

                  "email": "miles@meraki.com",

                  "name": "Miles Meraki",

                  "createdAt": 1518365681,

                  "accountType": "Guest",

                  "authorizations": [

                    {

                      "authorizedZone": "Store WiFi",

                      "expiresAt": 1526087474,

                      "authorizedByName": "Miles Meraki",

                      "authorizedByEmail": "miles@meraki.com"

                    }

                  ]

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/merakiAuthUsers":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Meraki auth users
      summary: getNetworkMerakiAuthUsers
      description: Lists the splash or RADIUS users configured under Meraki Authentication for a network.
      operationId: getNetworkMerakiAuthUsers
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "id": "aGlAaGkuY29t",

                      "email": "miles@meraki.com",

                      "name": "Miles Meraki",

                      "createdAt": 1518365681,

                      "accountType": "Guest",

                      "authorizations": [

                        {

                          "authorizedZone": "Store WiFi",

                          "expiresAt": 1526087474,

                          "authorizedByName": "Miles Meraki",

                          "authorizedByEmail": "miles@meraki.com"

                        }

                      ]

                    }

                  ]
              example: |-
                [

                  {

                    "id": "aGlAaGkuY29t",

                    "email": "miles@meraki.com",

                    "name": "Miles Meraki",

                    "createdAt": 1518365681,

                    "accountType": "Guest",

                    "authorizations": [

                      {

                        "authorizedZone": "Store WiFi",

                        "expiresAt": 1526087474,

                        "authorizedByName": "Miles Meraki",

                        "authorizedByEmail": "miles@meraki.com"

                      }

                    ]

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/netflowSettings":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - NetFlow settings
      summary: getNetworkNetflowSettings
      description: Returns the NetFlow traffic reporting settings for a network.
      operationId: getNetworkNetflowSettings
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "reportingEnabled": true,

                    "collectorIp": "1.2.3.4",

                    "collectorPort": 443

                  }
              example: |-
                {

                  "reportingEnabled": true,

                  "collectorIp": "1.2.3.4",

                  "collectorPort": 443

                }
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Networks
      summary: getNetwork
      description: Returns a network.
      operationId: getNetwork
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "id": "L_123456",

                    "organizationId": "2930418",

                    "name": "Long Island Office",

                    "timeZone": "America/Los_Angeles",

                    "tags": " tag1 tag2 ",

                    "type": "combined",

                    "productTypes": [

                      "appliance",

                      "switch",

                      "wireless"

                    ],

                    "disableMyMerakiCom": false,

                    "enrollmentString": "long-island-office"

                  }
              example: |-
                {

                  "id": "L_123456",

                  "organizationId": "2930418",

                  "name": "Long Island Office",

                  "timeZone": "America/Los_Angeles",

                  "tags": " tag1 tag2 ",

                  "type": "combined",

                  "productTypes": [

                    "appliance",

                    "switch",

                    "wireless"

                  ],

                  "disableMyMerakiCom": false,

                  "enrollmentString": "long-island-office"

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/accessPolicies":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Networks
      summary: getNetworkAccessPolicies
      description: Lists the access policies for this network. Only valid for MS networks.
      operationId: getNetworkAccessPolicies
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "number": 1,

                      "name": "My access policy",

                      "accessType": "8021.x",

                      "guestVlan": 3700,

                      "radiusServers": [

                        {

                          "ip": "1.2.3.4",

                          "port": 1337

                        },

                        {

                          "ip": "2.3.4.5",

                          "port": 1337

                        }

                      ]

                    }

                  ]
              example: |-
                [

                  {

                    "number": 1,

                    "name": "My access policy",

                    "accessType": "8021.x",

                    "guestVlan": 3700,

                    "radiusServers": [

                      {

                        "ip": "1.2.3.4",

                        "port": 1337

                      },

                      {

                        "ip": "2.3.4.5",

                        "port": 1337

                      }

                    ]

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/organizations/{organizationId}/networks":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Networks
      summary: getOrganizationNetworks
      description: Lists the networks in an organization.
      operationId: getOrganizationNetworks
      parameters:
        - name: organizationId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: configTemplateId
          in: query
          description: An optional parameter that is the ID of a config template. Will return all networks bound to that template.
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "id": "L_123456",

                      "organizationId": "2930418",

                      "name": "Long Island Office",

                      "timeZone": "America/Los_Angeles",

                      "tags": " tag1 tag2 ",

                      "type": "combined",

                      "productTypes": [

                        "appliance",

                        "switch",

                        "wireless"

                      ],

                      "disableMyMerakiCom": false,

                      "enrollmentString": "long-island-office"

                    }

                  ]
              example: |-
                [

                  {

                    "id": "L_123456",

                    "organizationId": "2930418",

                    "name": "Long Island Office",

                    "timeZone": "America/Los_Angeles",

                    "tags": " tag1 tag2 ",

                    "type": "combined",

                    "productTypes": [

                      "appliance",

                      "switch",

                      "wireless"

                    ],

                    "disableMyMerakiCom": false,

                    "enrollmentString": "long-island-office"

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/siteToSiteVpn":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Networks
      summary: getNetworkSiteToSiteVpn
      description: Returns the site-to-site VPN settings of a network. Only valid for MX networks.
      operationId: getNetworkSiteToSiteVpn
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "mode": "spoke",

                    "hubs": [

                      {

                        "hubId": "N_4901849",

                        "useDefaultRoute": true

                      },

                      {

                        "hubId": "N_1892489",

                        "useDefaultRoute": false

                      }

                    ],

                    "subnets": [

                      {

                        "localSubnet": "192.168.1.0/24",

                        "useVpn": true

                      },

                      {

                        "localSubnet": "192.168.128.0/24",

                        "useVpn": true

                      }

                    ]

                  }
              example: |-
                {

                  "mode": "spoke",

                  "hubs": [

                    {

                      "hubId": "N_4901849",

                      "useDefaultRoute": true

                    },

                    {

                      "hubId": "N_1892489",

                      "useDefaultRoute": false

                    }

                  ],

                  "subnets": [

                    {

                      "localSubnet": "192.168.1.0/24",

                      "useVpn": true

                    },

                    {

                      "localSubnet": "192.168.128.0/24",

                      "useVpn": true

                    }

                  ]

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/snmpSettings":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
      - SNMP settings
      summary: getNetworkSnmpSettings
      description: Returns the SNMP settings for a network.
      operationId: getNetworkSnmpSettings
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "access": "users",

                    "users": [

                      {

                        "username": "AzureDiamond",

                        "passphrase": "hunter2"

                      }

                    ]

                  }
              example: >-
                {

                  "access": "users",

                  "users": [

                    {

                      "username": "AzureDiamond",

                      "passphrase": "hunter2"

                    }

                  ]

                }
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"      
      deprecated: false

  "/networks/{networkId}/airMarshal":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Networks
      summary: getNetworkAirMarshal
      description: Lists Air Marshal scan results from a network.
      operationId: getNetworkAirMarshal
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: t0
          in: query
          description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
          style: form
          explode: true
          schema:
            type: string
        - name: timespan
          in: query
          description: "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
          style: form
          explode: true
          schema:
            type: number
            format: double
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "ssid": "linksys",

                      "bssids": [

                        {

                          "bssid": "00:11:22:33:44:55",

                          "contained": false,

                          "detectedBy": [

                            {

                              "device": "Q234-ABCD-5678",

                              "rssi": 17

                            }

                          ]

                        }

                      ],

                      "channels": [

                        36,

                        40

                      ],

                      "firstSeen": 1518365681,

                      "lastSeen": 1526087474,

                      "wiredMacs": [

                        "00:11:22:33:44:55"

                      ],

                      "wiredVlans": [

                        0,

                        108

                      ],

                      "wiredLastSeen": 1526087474

                    }

                  ]
              example: |-
                [

                  {

                    "ssid": "linksys",

                    "bssids": [

                      {

                        "bssid": "00:11:22:33:44:55",

                        "contained": false,

                        "detectedBy": [

                          {

                            "device": "Q234-ABCD-5678",

                            "rssi": 17

                          }

                        ]

                      }

                    ],

                    "channels": [

                      36,

                      40

                    ],

                    "firstSeen": 1518365681,

                    "lastSeen": 1526087474,

                    "wiredMacs": [

                      "00:11:22:33:44:55"

                    ],

                    "wiredVlans": [

                      0,

                      108

                    ],

                    "wiredLastSeen": 1526087474

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/organizations/{organizationId}":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Organizations
      summary: getOrganization
      description: Returns an organization.
      operationId: getOrganization
      parameters:
        - name: organizationId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "id": "2930418",

                    "name": "My organization",

                    "url": "https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview"

                  }
              example: |-
                {

                  "id": "2930418",

                  "name": "My organization",

                  "url": "https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview"

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/organizations/{organizationId}/uplinksLossAndLatency":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Organizations
      summary: getOrganizationUplinksLossAndLatency
      description: Returns the uplink loss and latency for every MX in the organization from at latest 2 minutes ago.
      operationId: getOrganizationUplinksLossAndLatency
      parameters:
        - name: organizationId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: t0
          in: query
          description: The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
          style: form
          explode: true
          schema:
            type: string
        - name: t1
          in: query
          description: The end of the timespan for the data. t1 can be a maximum of 5 minutes after t0. The latest possible time that t1 can be is 2 minutes into the past.
          style: form
          explode: true
          schema:
            type: string
        - name: timespan
          in: query
          description: "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 5 minutes. The default is 5 minutes."
          style: form
          explode: true
          schema:
            type: number
            format: double
        - name: uplink
          in: query
          description: "Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, cellular. Default will return all uplinks."
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/uplink"
        - name: ip
          in: query
          description: Optional filter for a specific destination IP. Default will return all destination IPs.
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "networkId": "N_12345",

                      "serial": "Q2AB-CDEF-GHIJ",

                      "uplink": "wan1",

                      "ip": "8.8.8.8",

                      "timeSeries": [

                        {

                          "ts": "2019-01-31T18:46:13Z",

                          "lossPercent": 5.3,

                          "latencyMs": 194.9

                        }

                      ]

                    }

                  ]
              example: |-
                [

                  {

                    "networkId": "N_12345",

                    "serial": "Q2AB-CDEF-GHIJ",

                    "uplink": "wan1",

                    "ip": "8.8.8.8",

                    "timeSeries": [

                      {

                        "ts": "2019-01-31T18:46:13Z",

                        "lossPercent": 5.3,

                        "latencyMs": 194.9

                      }

                    ]

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/organizations/{organizationId}/inventory":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Organizations
      summary: getOrganizationInventory
      description: Returns the inventory for an organization.
      operationId: getOrganizationInventory
      parameters:
        - name: organizationId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: includeLicenseInfo
          in: query
          description: "When this parameter is true, each entity in the response will include the license expiration date of the device (if any). Only applies to organizations that support per-device licensing. Defaults to false."
          style: form
          explode: true
          schema:
            type: boolean
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "mac": "00:11:22:33:44:55",

                      "serial": "Q234-ABCD-5678",

                      "networkId": "N_24329156",

                      "model": "MR34",

                      "claimedAt": 1518365681,

                      "publicIp": "123.123.123.1",

                      "name": "My AP"

                    }

                  ]
              example: |-
                [

                  {

                    "mac": "00:11:22:33:44:55",

                    "serial": "Q234-ABCD-5678",

                    "networkId": "N_24329156",

                    "model": "MR34",

                    "claimedAt": 1518365681,

                    "publicIp": "123.123.123.1",

                    "name": "My AP"

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/organizations/{organizationId}/deviceStatuses":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Organizations
      summary: getOrganizationDeviceStatuses
      description: Lists the status of every Meraki device in the organization.
      operationId: getOrganizationDeviceStatuses
      parameters:
        - name: organizationId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "name": "My AP",

                      "serial": "Q234-ABCD-5678",

                      "mac": "00:11:22:33:44:55",

                      "status": "online",

                      "lanIp": "1.2.3.4",

                      "publicIp": "123.123.123.1",

                      "networkId": "N_24329156"

                    }

                  ]
              example: |-
                [

                  {

                    "name": "My AP",

                    "serial": "Q234-ABCD-5678",

                    "mac": "00:11:22:33:44:55",

                    "status": "online",

                    "lanIp": "1.2.3.4",

                    "publicIp": "123.123.123.1",

                    "networkId": "N_24329156"

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/devices/{serial}/wireless/radioSettings":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Radio settings
      summary: getNetworkDeviceWirelessRadioSettings
      description: Returns the radio settings of a device.
      operationId: getNetworkDeviceWirelessRadioSettings
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: serial
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "serial": "Q234-ABCD-5678",

                    "rfProfileId": "1234"

                  }
              example: |-
                {

                  "serial": "Q234-ABCD-5678",

                  "rfProfileId": "1234"

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/wireless/rfProfiles":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Radio settings
      summary: getNetworkWirelessRfProfiles
      description: List the non-basic RF profiles for this network.
      operationId: getNetworkWirelessRfProfiles
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: includeTemplateProfiles
          in: query
          description: |
            If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template
            should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false.
          style: form
          explode: true
          schema:
            type: boolean
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "id": "1234",

                      "networkId": "N_24329156",

                      "name": "Some Custom RF Profile",

                      "clientBalancingEnabled": true,

                      "minBitrateType": "band",

                      "bandSelectionType": "ap",

                      "apSelectionSettings": {

                        "bandOperationMode": "dual",

                        "bandSteeringEnabled": true

                      },

                      "twoFourGhzSettings": {

                        "maxPower": 30,

                        "minPower": 5,

                        "minBitrate": 11,

                        "rxsop": null,

                        "validAutoChannels": [

                          1,

                          6,

                          11

                        ],

                        "axEnabled": true

                      },

                      "fiveGhzSettings": {

                        "maxPower": 30,

                        "minPower": 8,

                        "minBitrate": 12,

                        "rxsop": null,

                        "validAutoChannels": [

                          36,

                          40,

                          44,

                          48,

                          52,

                          56,

                          60,

                          64,

                          100,

                          104,

                          108,

                          112,

                          116,

                          120,

                          124,

                          128,

                          132,

                          136,

                          140,

                          144,

                          149,

                          153,

                          157,

                          161,

                          165

                        ],

                        "channelWidth": "auto"

                      }

                    }

                  ]
              example: |-
                [

                  {

                    "id": "1234",

                    "networkId": "N_24329156",

                    "name": "Some Custom RF Profile",

                    "clientBalancingEnabled": true,

                    "minBitrateType": "band",

                    "bandSelectionType": "ap",

                    "apSelectionSettings": {

                      "bandOperationMode": "dual",

                      "bandSteeringEnabled": true

                    },

                    "twoFourGhzSettings": {

                      "maxPower": 30,

                      "minPower": 5,

                      "minBitrate": 11,

                      "rxsop": null,

                      "validAutoChannels": [

                        1,

                        6,

                        11

                      ],

                      "axEnabled": true

                    },

                    "fiveGhzSettings": {

                      "maxPower": 30,

                      "minPower": 8,

                      "minBitrate": 12,

                      "rxsop": null,

                      "validAutoChannels": [

                        36,

                        40,

                        44,

                        48,

                        52,

                        56,

                        60,

                        64,

                        100,

                        104,

                        108,

                        112,

                        116,

                        120,

                        124,

                        128,

                        132,

                        136,

                        140,

                        144,

                        149,

                        153,

                        157,

                        161,

                        165

                      ],

                      "channelWidth": "auto"

                    }

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Radio settings
      summary: getNetworkWirelessRfProfile
      description: Returns a RF profile.
      operationId: getNetworkWirelessRfProfile
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: rfProfileId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "id": "1234",

                    "networkId": "N_24329156",

                    "name": "Some Custom RF Profile",

                    "clientBalancingEnabled": true,

                    "minBitrateType": "band",

                    "bandSelectionType": "ap",

                    "apSelectionSettings": {

                      "bandOperationMode": "dual",

                      "bandSteeringEnabled": true

                    },

                    "twoFourGhzSettings": {

                      "maxPower": 30,

                      "minPower": 5,

                      "minBitrate": 11,

                      "rxsop": null,

                      "validAutoChannels": [

                        1,

                        6,

                        11

                      ],

                      "axEnabled": true

                    },

                    "fiveGhzSettings": {

                      "maxPower": 30,

                      "minPower": 8,

                      "minBitrate": 12,

                      "rxsop": null,

                      "validAutoChannels": [

                        36,

                        40,

                        44,

                        48,

                        52,

                        56,

                        60,

                        64,

                        100,

                        104,

                        108,

                        112,

                        116,

                        120,

                        124,

                        128,

                        132,

                        136,

                        140,

                        144,

                        149,

                        153,

                        157,

                        161,

                        165

                      ],

                      "channelWidth": "auto"

                    }

                  }
              example: |-
                {

                  "id": "1234",

                  "networkId": "N_24329156",

                  "name": "Some Custom RF Profile",

                  "clientBalancingEnabled": true,

                  "minBitrateType": "band",

                  "bandSelectionType": "ap",

                  "apSelectionSettings": {

                    "bandOperationMode": "dual",

                    "bandSteeringEnabled": true

                  },

                  "twoFourGhzSettings": {

                    "maxPower": 30,

                    "minPower": 5,

                    "minBitrate": 11,

                    "rxsop": null,

                    "validAutoChannels": [

                      1,

                      6,

                      11

                    ],

                    "axEnabled": true

                  },

                  "fiveGhzSettings": {

                    "maxPower": 30,

                    "minPower": 8,

                    "minBitrate": 12,

                    "rxsop": null,

                    "validAutoChannels": [

                      36,

                      40,

                      44,

                      48,

                      52,

                      56,

                      60,

                      64,

                      100,

                      104,

                      108,

                      112,

                      116,

                      120,

                      124,

                      128,

                      132,

                      136,

                      140,

                      144,

                      149,

                      153,

                      157,

                      161,

                      165

                    ],

                    "channelWidth": "auto"

                  }

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/organizations/{organizationId}/snmp":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - SNMP settings
      summary: getOrganizationSnmp
      description: Returns the SNMP settings for an organization.
      operationId: getOrganizationSnmp
      parameters:
        - name: organizationId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "v2cEnabled": false,

                    "v3Enabled": true,

                    "v3AuthMode": "SHA",

                    "v3PrivMode": "AES128",

                    "peerIps": "123.123.123.1",

                    "hostname": "n1.meraki.com",

                    "port": 443

                  }
              example: |-
                {

                  "v2cEnabled": false,

                  "v3Enabled": true,

                  "v3AuthMode": "SHA",

                  "v3PrivMode": "AES128",

                  "peerIps": "123.123.123.1",

                  "hostname": "n1.meraki.com",

                  "port": 443

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/devices/{serial}/wireless/status":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - SSIDs
      summary: getNetworkDeviceWirelessStatus
      description: Returns the SSID statuses of an access point.
      operationId: getNetworkDeviceWirelessStatus
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: serial
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "basicServiceSets": [

                      {

                        "ssidName": "My SSID",

                        "ssidNumber": 0,

                        "enabled": true,

                        "band": "2.4 GHz",

                        "bssid": "8A:15:04:00:00:00",

                        "channel": 11,

                        "channelWidth": "20 MHz",

                        "power": "18 dBm",

                        "visible": true,

                        "broadcasting": true

                      },

                      {

                        "ssidName": "My SSID",

                        "ssidNumber": 0,

                        "enabled": true,

                        "band": "5 GHz",

                        "bssid": "8A:15:14:00:00:00",

                        "channel": 149,

                        "channelWidth": "80 MHz",

                        "power": "18 dBm",

                        "visible": true,

                        "broadcasting": true

                      }

                    ]

                  }
              example: |-
                {

                  "basicServiceSets": [

                    {

                      "ssidName": "My SSID",

                      "ssidNumber": 0,

                      "enabled": true,

                      "band": "2.4 GHz",

                      "bssid": "8A:15:04:00:00:00",

                      "channel": 11,

                      "channelWidth": "20 MHz",

                      "power": "18 dBm",

                      "visible": true,

                      "broadcasting": true

                    },

                    {

                      "ssidName": "My SSID",

                      "ssidNumber": 0,

                      "enabled": true,

                      "band": "5 GHz",

                      "bssid": "8A:15:14:00:00:00",

                      "channel": 149,

                      "channelWidth": "80 MHz",

                      "power": "18 dBm",

                      "visible": true,

                      "broadcasting": true

                    }

                  ]

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/ssids/{number}":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - SSIDs
      summary: getNetworkSsid
      description: Returns a single SSID.
      operationId: getNetworkSsid
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: number
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "number": 0,

                    "name": "My SSID",

                    "enabled": true,

                    "splashPage": "Click-through splash page",

                    "ssidAdminAccessible": false,

                    "authMode": "8021x-radius",

                    "encryptionMode": "wpa-eap",

                    "wpaEncryptionMode": "WPA2 only",

                    "radiusServers": [

                      {

                        "host": "0.0.0.0",

                        "port": 3000

                      }

                    ],

                    "radiusAccountingEnabled": false,

                    "radiusEnabled": true,

                    "radiusAttributeForGroupPolicies": "Filter-Id",

                    "radiusFailoverPolicy": "null",

                    "radiusLoadBalancingPolicy": "null",

                    "ipAssignmentMode": "NAT mode",

                    "adminSplashUrl": "http://example.com",

                    "splashTimeout": "30 minutes",

                    "walledGardenEnabled": true,

                    "walledGardenRanges": "example.com",

                    "minBitrate": 11,

                    "bandSelection": "5 GHz band only",

                    "perClientBandwidthLimitUp": 0,

                    "perClientBandwidthLimitDown": 0

                  }
              example: |-
                {

                  "number": 0,

                  "name": "My SSID",

                  "enabled": true,

                  "splashPage": "Click-through splash page",

                  "ssidAdminAccessible": false,

                  "authMode": "8021x-radius",

                  "encryptionMode": "wpa-eap",

                  "wpaEncryptionMode": "WPA2 only",

                  "radiusServers": [

                    {

                      "host": "0.0.0.0",

                      "port": 3000

                    }

                  ],

                  "radiusAccountingEnabled": false,

                  "radiusEnabled": true,

                  "radiusAttributeForGroupPolicies": "Filter-Id",

                  "radiusFailoverPolicy": "null",

                  "radiusLoadBalancingPolicy": "null",

                  "ipAssignmentMode": "NAT mode",

                  "adminSplashUrl": "http://example.com",

                  "splashTimeout": "30 minutes",

                  "walledGardenEnabled": true,

                  "walledGardenRanges": "example.com",

                  "minBitrate": 11,

                  "bandSelection": "5 GHz band only",

                  "perClientBandwidthLimitUp": 0,

                  "perClientBandwidthLimitDown": 0

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/ssids":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - SSIDs
      summary: getNetworkSsids
      description: Lists the SSIDs in a network. Supports networks with access points or wireless-enabled security appliances and teleworker gateways.
      operationId: getNetworkSsids
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "number": 0,

                      "name": "My SSID",

                      "enabled": true,

                      "splashPage": "Click-through splash page",

                      "ssidAdminAccessible": false,

                      "authMode": "8021x-radius",

                      "encryptionMode": "wpa-eap",

                      "wpaEncryptionMode": "WPA2 only",

                      "radiusServers": [

                        {

                          "host": "0.0.0.0",

                          "port": 3000

                        }

                      ],

                      "radiusAccountingEnabled": false,

                      "radiusEnabled": true,

                      "radiusAttributeForGroupPolicies": "Filter-Id",

                      "radiusFailoverPolicy": "null",

                      "radiusLoadBalancingPolicy": "null",

                      "ipAssignmentMode": "NAT mode",

                      "adminSplashUrl": "http://example.com",

                      "splashTimeout": "30 minutes",

                      "walledGardenEnabled": true,

                      "walledGardenRanges": "example.com",

                      "minBitrate": 11,

                      "bandSelection": "5 GHz band only",

                      "perClientBandwidthLimitUp": 0,

                      "perClientBandwidthLimitDown": 0

                    }

                  ]
              example: |-
                [

                  {

                    "number": 0,

                    "name": "My SSID",

                    "enabled": true,

                    "splashPage": "Click-through splash page",

                    "ssidAdminAccessible": false,

                    "authMode": "8021x-radius",

                    "encryptionMode": "wpa-eap",

                    "wpaEncryptionMode": "WPA2 only",

                    "radiusServers": [

                      {

                        "host": "0.0.0.0",

                        "port": 3000

                      }

                    ],

                    "radiusAccountingEnabled": false,

                    "radiusEnabled": true,

                    "radiusAttributeForGroupPolicies": "Filter-Id",

                    "radiusFailoverPolicy": "null",

                    "radiusLoadBalancingPolicy": "null",

                    "ipAssignmentMode": "NAT mode",

                    "adminSplashUrl": "http://example.com",

                    "splashTimeout": "30 minutes",

                    "walledGardenEnabled": true,

                    "walledGardenRanges": "example.com",

                    "minBitrate": 11,

                    "bandSelection": "5 GHz band only",

                    "perClientBandwidthLimitUp": 0,

                    "perClientBandwidthLimitDown": 0

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/clients/{clientId}/securityEvents":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Security events
      summary: getNetworkClientSecurityEvents
      description: Lists the security events for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.
      operationId: getNetworkClientSecurityEvents
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: clientId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: t0
          in: query
          description: The beginning of the timespan for the data. The maximum lookback period is 791 days from today.
          style: form
          explode: true
          schema:
            type: string
        - name: t1
          in: query
          description: The end of the timespan for the data. t1 can be a maximum of 791 days after t0.
          style: form
          explode: true
          schema:
            type: string
        - name: timespan
          in: query
          description: "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 31 days."
          style: form
          explode: true
          schema:
            type: number
            format: double
        - name: perPage
          in: query
          description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: startingAfter
          in: query
          description: "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          style: form
          explode: true
          schema:
            type: string
        - name: endingBefore
          in: query
          description: "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "ts": 1547683314.2703979,

                      "deviceMac": "00:18:0a:01:02:03",

                      "clientMac": "A1:B2:C3:D4:E5:F6",

                      "srcIp": "1.2.3.4:34195",

                      "destIp": "10.20.30.40:80",

                      "protocol": "tcp/ip",

                      "priority": "2",

                      "classification": "4",

                      "blocked": true,

                      "message": "SERVER-WEBAPP JBoss JMX console access attempt",

                      "signature": "1:21516:9",

                      "sigSource": ""

                    },

                    {

                      "ts": 1547683827.7232649,

                      "deviceMac": "00:18:0a:01:02:03",

                      "clientMac": "A1:B2:C3:D4:E5:F6",

                      "srcIp": "1.2.3.4:56023",

                      "destIp": "10.20.30.40:80",

                      "protocol": "tcp/ip",

                      "priority": "1",

                      "classification": "33",

                      "blocked": true,

                      "message": "POLICY-OTHER Adobe ColdFusion admin interface access attempt",

                      "signature": "1:25975:2",

                      "sigSource": ""

                    }

                  ]
              example: |-
                [

                  {

                    "ts": 1547683314.2703979,

                    "deviceMac": "00:18:0a:01:02:03",

                    "clientMac": "A1:B2:C3:D4:E5:F6",

                    "srcIp": "1.2.3.4:34195",

                    "destIp": "10.20.30.40:80",

                    "protocol": "tcp/ip",

                    "priority": "2",

                    "classification": "4",

                    "blocked": true,

                    "message": "SERVER-WEBAPP JBoss JMX console access attempt",

                    "signature": "1:21516:9",

                    "sigSource": ""

                  },

                  {

                    "ts": 1547683827.7232649,

                    "deviceMac": "00:18:0a:01:02:03",

                    "clientMac": "A1:B2:C3:D4:E5:F6",

                    "srcIp": "1.2.3.4:56023",

                    "destIp": "10.20.30.40:80",

                    "protocol": "tcp/ip",

                    "priority": "1",

                    "classification": "33",

                    "blocked": true,

                    "message": "POLICY-OTHER Adobe ColdFusion admin interface access attempt",

                    "signature": "1:25975:2",

                    "sigSource": ""

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/networks/{networkId}/securityEvents":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Security events
      summary: getNetworkSecurityEvents
      description: Lists the security events for a network.
      operationId: getNetworkSecurityEvents
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: t0
          in: query
          description: The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
          style: form
          explode: true
          schema:
            type: string
        - name: t1
          in: query
          description: The end of the timespan for the data. t1 can be a maximum of 365 days after t0.
          style: form
          explode: true
          schema:
            type: string
        - name: timespan
          in: query
          description: "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days."
          style: form
          explode: true
          schema:
            type: number
            format: double
        - name: perPage
          in: query
          description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: startingAfter
          in: query
          description: "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          style: form
          explode: true
          schema:
            type: string
        - name: endingBefore
          in: query
          description: "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "ts": 1547683314.2703979,

                      "deviceMac": "00:18:0a:01:02:03",

                      "clientMac": "A1:B2:C3:D4:E5:F6",

                      "srcIp": "1.2.3.4:34195",

                      "destIp": "10.20.30.40:80",

                      "protocol": "tcp/ip",

                      "priority": "2",

                      "classification": "4",

                      "blocked": true,

                      "message": "SERVER-WEBAPP JBoss JMX console access attempt",

                      "signature": "1:21516:9",

                      "sigSource": ""

                    },

                    {

                      "ts": 1547683827.7232649,

                      "deviceMac": "00:18:0a:01:02:03",

                      "clientMac": "A1:B2:C3:D4:E5:F6",

                      "srcIp": "1.2.3.4:56023",

                      "destIp": "10.20.30.40:80",

                      "protocol": "tcp/ip",

                      "priority": "1",

                      "classification": "33",

                      "blocked": true,

                      "message": "POLICY-OTHER Adobe ColdFusion admin interface access attempt",

                      "signature": "1:25975:2",

                      "sigSource": ""

                    }

                  ]
              example: |-
                [

                  {

                    "ts": 1547683314.2703979,

                    "deviceMac": "00:18:0a:01:02:03",

                    "clientMac": "A1:B2:C3:D4:E5:F6",

                    "srcIp": "1.2.3.4:34195",

                    "destIp": "10.20.30.40:80",

                    "protocol": "tcp/ip",

                    "priority": "2",

                    "classification": "4",

                    "blocked": true,

                    "message": "SERVER-WEBAPP JBoss JMX console access attempt",

                    "signature": "1:21516:9",

                    "sigSource": ""

                  },

                  {

                    "ts": 1547683827.7232649,

                    "deviceMac": "00:18:0a:01:02:03",

                    "clientMac": "A1:B2:C3:D4:E5:F6",

                    "srcIp": "1.2.3.4:56023",

                    "destIp": "10.20.30.40:80",

                    "protocol": "tcp/ip",

                    "priority": "1",

                    "classification": "33",

                    "blocked": true,

                    "message": "POLICY-OTHER Adobe ColdFusion admin interface access attempt",

                    "signature": "1:25975:2",

                    "sigSource": ""

                  }

                ]

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false

  "/organizations/{organizationId}/securityEvents":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"  
    get:
      tags:
        - Security events
      summary: getOrganizationSecurityEvents
      description: Lists the security events for an organization.
      operationId: getOrganizationSecurityEvents
      parameters:
        - name: organizationId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: t0
          in: query
          description: The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
          style: form
          explode: true
          schema:
            type: string
        - name: t1
          in: query
          description: The end of the timespan for the data. t1 can be a maximum of 365 days after t0.
          style: form
          explode: true
          schema:
            type: string
        - name: timespan
          in: query
          description: "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days."
          style: form
          explode: true
          schema:
            type: number
            format: double
        - name: perPage
          in: query
          description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: startingAfter
          in: query
          description: "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          style: form
          explode: true
          schema:
            type: string
        - name: endingBefore
          in: query
          description: "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "ts": 1547683314.2703979,

                      "deviceMac": "00:18:0a:01:02:03",

                      "clientMac": "A1:B2:C3:D4:E5:F6",

                      "srcIp": "1.2.3.4:34195",

                      "destIp": "10.20.30.40:80",

                      "protocol": "tcp/ip",

                      "priority": "2",

                      "classification": "4",

                      "blocked": true,

                      "message": "SERVER-WEBAPP JBoss JMX console access attempt",

                      "signature": "1:21516:9",

                      "sigSource": ""

                    },

                    {

                      "ts": 1547683827.7232649,

                      "deviceMac": "00:18:0a:01:02:03",

                      "clientMac": "A1:B2:C3:D4:E5:F6",

                      "srcIp": "1.2.3.4:56023",

                      "destIp": "10.20.30.40:80",

                      "protocol": "tcp/ip",

                      "priority": "1",

                      "classification": "33",

                      "blocked": true,

                      "message": "POLICY-OTHER Adobe ColdFusion admin interface access attempt",

                      "signature": "1:25975:2",

                      "sigSource": ""

                    }

                  ]
              example: |-
                [

                  {

                    "ts": 1547683314.2703979,

                    "deviceMac": "00:18:0a:01:02:03",

                    "clientMac": "A1:B2:C3:D4:E5:F6",

                    "srcIp": "1.2.3.4:34195",

                    "destIp": "10.20.30.40:80",

                    "protocol": "tcp/ip",

                    "priority": "2",

                    "classification": "4",

                    "blocked": true,

                    "message": "SERVER-WEBAPP JBoss JMX console access attempt",

                    "signature": "1:21516:9",

                    "sigSource": ""

                  },

                  {

                    "ts": 1547683827.7232649,

                    "deviceMac": "00:18:0a:01:02:03",

                    "clientMac": "A1:B2:C3:D4:E5:F6",

                    "srcIp": "1.2.3.4:56023",

                    "destIp": "10.20.30.40:80",

                    "protocol": "tcp/ip",

                    "priority": "1",

                    "classification": "33",

                    "blocked": true,

                    "message": "POLICY-OTHER Adobe ColdFusion admin interface access attempt",

                    "signature": "1:25975:2",

                    "sigSource": ""

                  }

                ]
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/splashLoginAttempts":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Splash login attempts
      summary: getNetworkSplashLoginAttempts
      description: Lists the splash login attempts for a network.
      operationId: getNetworkSplashLoginAttempts
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: ssidNumber
          in: query
          description: Only return the login attempts for the specified SSID
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/ssidNumber"
        - name: loginIdentifier
          in: query
          description: "The username, email, or phone number used during login"
          style: form
          explode: true
          schema:
            type: string
        - name: timespan
          in: query
          description: "The timespan, in seconds, for the login attempts. The period will be from [timespan] seconds ago until now. The maximum timespan is 3 months"
          style: form
          explode: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "name": "Miles Meraki",

                      "login": "miles@meraki.com",

                      "ssid": "My SSID",

                      "loginAt": 1518365681,

                      "gatewayDeviceMac": "00:11:22:33:44:55",

                      "clientMac": "22:33:44:55:66:77",

                      "clientId": "k74272e",

                      "authorization": "success"

                    }

                  ]
              example: |-
                [

                  {

                    "name": "Miles Meraki",

                    "login": "miles@meraki.com",

                    "ssid": "My SSID",

                    "loginAt": 1518365681,

                    "gatewayDeviceMac": "00:11:22:33:44:55",

                    "clientMac": "22:33:44:55:66:77",

                    "clientId": "k74272e",

                    "authorization": "success"

                  }

                ]
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/ssids/{number}/splashSettings":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Splash settings
      summary: getNetworkSsidSplashSettings
      description: Displays the splash page settings for the given SSID.
      operationId: getNetworkSsidSplashSettings
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: number
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "ssidNumber": 0,

                    "splashPage": "Click-through splash page",

                    "splashUrl": "https://www.custom_splash_url.com",

                    "useSplashUrl": true

                  }
              example: |-
                {

                  "ssidNumber": 0,

                  "splashPage": "Click-through splash page",

                  "splashUrl": "https://www.custom_splash_url.com",

                  "useSplashUrl": true

                }
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/ssids/{number}/trafficShaping":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
      - Traffic shaping
      summary: getNetworkSsidTrafficShaping
      description: Displays the traffic shaping settings for a SSID on an MR network.
      operationId: getNetworkSsidTrafficShaping
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: number
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "trafficShapingEnabled": true,

                    "defaultRulesEnabled": true,

                    "rules": [

                      {

                        "definitions": [

                          {

                            "type": "host",

                            "value": "google.com"

                          },

                          {

                            "type": "port",

                            "value": "9090"

                          },

                          {

                            "type": "ipRange",

                            "value": "192.1.0.0"

                          },

                          {

                            "type": "ipRange",

                            "value": "192.1.0.0/16"

                          },

                          {

                            "type": "ipRange",

                            "value": "10.1.0.0/16:80"

                          },

                          {

                            "type": "localNet",

                            "value": "192.168.0.0/16"

                          },

                          {

                            "type": "applicationCategory",

                            "value": {

                              "id": "meraki:layer7/category/2",

                              "name": "Blogging"

                            }

                          },

                          {

                            "type": "application",

                            "value": {

                              "id": "meraki:layer7/application/133",

                              "name": "Battle.net"

                            }

                          }

                        ],

                        "perClientBandwidthLimits": {

                          "settings": "custom",

                          "bandwidthLimits": {

                            "limitUp": 1000000,

                            "limitDown": 1000000

                          }

                        },

                        "dscpTagValue": null,

                        "pcpTagValue": null

                      }

                    ]

                  }
              example: >-
                {

                  "trafficShapingEnabled": true,

                  "defaultRulesEnabled": true,

                  "rules": [

                    {

                      "definitions": [

                        {

                          "type": "host",

                          "value": "google.com"

                        },

                        {

                          "type": "port",

                          "value": "9090"

                        },

                        {

                          "type": "ipRange",

                          "value": "192.1.0.0"

                        },

                        {

                          "type": "ipRange",

                          "value": "192.1.0.0/16"

                        },

                        {

                          "type": "ipRange",

                          "value": "10.1.0.0/16:80"

                        },

                        {

                          "type": "localNet",

                          "value": "192.168.0.0/16"

                        },

                        {

                          "type": "applicationCategory",

                          "value": {

                            "id": "meraki:layer7/category/2",

                            "name": "Blogging"

                          }

                        },

                        {

                          "type": "application",

                          "value": {

                            "id": "meraki:layer7/application/133",

                            "name": "Battle.net"

                          }

                        }

                      ],

                      "perClientBandwidthLimits": {

                        "settings": "custom",

                        "bandwidthLimits": {

                          "limitUp": 1000000,

                          "limitDown": 1000000

                        }

                      },

                      "dscpTagValue": null,

                      "pcpTagValue": null

                    }

                  ]

                }

        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"                
      deprecated: false  
  "/networks/{networkId}/switch/accessControlLists":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Switch ACLs
      summary: getNetworkSwitchAccessControlLists
      description: Returns the access control lists for a MS network.
      operationId: getNetworkSwitchAccessControlLists
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "rules": [

                      {

                        "comment": "Deny SSH",

                        "policy": "deny",

                        "ipVersion": "ipv4",

                        "protocol": "tcp",

                        "srcCidr": "10.1.10.0/24",

                        "srcPort": "any",

                        "dstCidr": "172.16.30/24",

                        "dstPort": 22,

                        "vlan": 10

                      },

                      {

                        "comment": "Default rule",

                        "policy": "allow",

                        "ipVersion": "any",

                        "protocol": "any",

                        "srcCidr": "any",

                        "srcPort": "any",

                        "dstCidr": "any",

                        "dstPort": "any",

                        "vlan": "any"

                      }

                    ]

                  }
              example: |-
                {

                  "rules": [

                    {

                      "comment": "Deny SSH",

                      "policy": "deny",

                      "ipVersion": "ipv4",

                      "protocol": "tcp",

                      "srcCidr": "10.1.10.0/24",

                      "srcPort": "any",

                      "dstCidr": "172.16.30/24",

                      "dstPort": 22,

                      "vlan": 10

                    },

                    {

                      "comment": "Default rule",

                      "policy": "allow",

                      "ipVersion": "any",

                      "protocol": "any",

                      "srcCidr": "any",

                      "srcPort": "any",

                      "dstCidr": "any",

                      "dstPort": "any",

                      "vlan": "any"

                    }

                  ]

                }
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/switch/portSchedules":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Switch port schedules
      summary: getNetworkSwitchPortSchedules
      description: Lists switch port schedules.
      operationId: getNetworkSwitchPortSchedules
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "id": "1234",

                      "networkId": "N_24329156",

                      "name": "Weekdays schedule",

                      "portSchedule": {

                        "monday": {

                          "active": true,

                          "from": "9:00",

                          "to": "17:00"

                        },

                        "tuesday": {

                          "active": true,

                          "from": "9:00",

                          "to": "17:00"

                        },

                        "wednesday": {

                          "active": true,

                          "from": "9:00",

                          "to": "17:00"

                        },

                        "thursday": {

                          "active": true,

                          "from": "9:00",

                          "to": "17:00"

                        },

                        "friday": {

                          "active": true,

                          "from": "9:00",

                          "to": "17:00"

                        },

                        "saturday": {

                          "active": false,

                          "from": "0:00",

                          "to": "24:00"

                        },

                        "sunday": {

                          "active": false,

                          "from": "0:00",

                          "to": "24:00"

                        }

                      }

                    }

                  ]
              example: |-
                [

                  {

                    "id": "1234",

                    "networkId": "N_24329156",

                    "name": "Weekdays schedule",

                    "portSchedule": {

                      "monday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "tuesday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "wednesday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "thursday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "friday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "saturday": {

                        "active": false,

                        "from": "0:00",

                        "to": "24:00"

                      },

                      "sunday": {

                        "active": false,

                        "from": "0:00",

                        "to": "24:00"

                      }

                    }

                  }

                ]
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/devices/{serial}/switchPorts/{number}":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Switch ports
      summary: getDeviceSwitchPort
      description: Returns a switch port.
      operationId: getDeviceSwitchPort
      parameters:
        - name: serial
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: number
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "number": 1,

                    "name": "My switch port",

                    "tags": "tag1 tag2",

                    "enabled": true,

                    "poeEnabled": true,

                    "type": "access",

                    "vlan": 10,

                    "voiceVlan": 20,

                    "isolationEnabled": false,

                    "rstpEnabled": true,

                    "stpGuard": "disabled",

                    "accessPolicyNumber": "1234",

                    "linkNegotiation": "Auto negotiate",

                    "portScheduleId": "1234",

                    "udld": "Alert only",

                    "macWhitelist": [

                      "34:56:fe:ce:8e:a0",

                      "34:56:fe:ce:8e:a1"

                    ],

                    "stickyMacWhitelist": [

                      "34:56:fe:ce:8e:b0",

                      "34:56:fe:ce:8e:b1"

                    ],

                    "stickyMacWhitelistLimit": 5,

                    "stormControlEnabled": true

                  }
              example: |-
                {

                  "number": 1,

                  "name": "My switch port",

                  "tags": "tag1 tag2",

                  "enabled": true,

                  "poeEnabled": true,

                  "type": "access",

                  "vlan": 10,

                  "voiceVlan": 20,

                  "isolationEnabled": false,

                  "rstpEnabled": true,

                  "stpGuard": "disabled",

                  "accessPolicyNumber": "1234",

                  "linkNegotiation": "Auto negotiate",

                  "portScheduleId": "1234",

                  "udld": "Alert only",

                  "macWhitelist": [

                    "34:56:fe:ce:8e:a0",

                    "34:56:fe:ce:8e:a1"

                  ],

                  "stickyMacWhitelist": [

                    "34:56:fe:ce:8e:b0",

                    "34:56:fe:ce:8e:b1"

                  ],

                  "stickyMacWhitelistLimit": 5,

                  "stormControlEnabled": true

                }
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/devices/{serial}/switchPorts":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Switch ports
      summary: getDeviceSwitchPorts
      description: Lists the switch ports for a switch.
      operationId: getDeviceSwitchPorts
      parameters:
        - name: serial
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "number": 1,

                      "name": "My switch port",

                      "tags": "tag1 tag2",

                      "enabled": true,

                      "poeEnabled": true,

                      "type": "access",

                      "vlan": 10,

                      "voiceVlan": 20,

                      "isolationEnabled": false,

                      "rstpEnabled": true,

                      "stpGuard": "disabled",

                      "accessPolicyNumber": "1234",

                      "linkNegotiation": "Auto negotiate",

                      "portScheduleId": "1234",

                      "udld": "Alert only",

                      "macWhitelist": [

                        "34:56:fe:ce:8e:a0",

                        "34:56:fe:ce:8e:a1"

                      ],

                      "stickyMacWhitelist": [

                        "34:56:fe:ce:8e:b0",

                        "34:56:fe:ce:8e:b1"

                      ],

                      "stickyMacWhitelistLimit": 5,

                      "stormControlEnabled": true

                    }

                  ]
              example: |-
                [

                  {

                    "number": 1,

                    "name": "My switch port",

                    "tags": "tag1 tag2",

                    "enabled": true,

                    "poeEnabled": true,

                    "type": "access",

                    "vlan": 10,

                    "voiceVlan": 20,

                    "isolationEnabled": false,

                    "rstpEnabled": true,

                    "stpGuard": "disabled",

                    "accessPolicyNumber": "1234",

                    "linkNegotiation": "Auto negotiate",

                    "portScheduleId": "1234",

                    "udld": "Alert only",

                    "macWhitelist": [

                      "34:56:fe:ce:8e:a0",

                      "34:56:fe:ce:8e:a1"

                    ],

                    "stickyMacWhitelist": [

                      "34:56:fe:ce:8e:b0",

                      "34:56:fe:ce:8e:b1"

                    ],

                    "stickyMacWhitelistLimit": 5,

                    "stormControlEnabled": true

                  }

                ]
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/devices/{serial}/switchPortStatuses":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Switch ports
      summary: getDeviceSwitchPortStatuses
      description: Returns the status for all the ports of a switch.
      operationId: getDeviceSwitchPortStatuses
      parameters:
        - name: serial
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: t0
          in: query
          description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
          style: form
          explode: true
          schema:
            type: string
        - name: timespan
          in: query
          description: "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
          style: form
          explode: true
          schema:
            type: number
            format: double
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "portId": "1",

                      "enabled": true,

                      "status": "Connected",

                      "errors": [

                        "PoE overload",

                        "Very high proportion of CRC errors"

                      ],

                      "warnings": [

                        "PoE port was denied power",

                        "High proportion of CRC errors"

                      ],

                      "speed": "10 Gbps",

                      "duplex": "full",

                      "usageInKb": {

                        "total": 40867,

                        "sent": 23008,

                        "recv": 17859

                      },

                      "cdp": {

                        "systemName": "",

                        "platform": "MS350-24X",

                        "deviceId": "0c8ddbddee:ff",

                        "portId": "Port 20",

                        "nativeVlan": 1,

                        "address": "10.0,0.1",

                        "managementAddress": "10.0.0.100",

                        "version": "1",

                        "vtpManagementDomain": "",

                        "capabilities": "Switch"

                      },

                      "lldp": {

                        "systemName": "MS350-24X - Test",

                        "systemDescription": "MS350-24X Cloud Managed PoE Switch",

                        "portId": "20",

                        "portDescription": "Port 20",

                        "chassisId": "0c:8d:db:dd:ee:ff",

                        "managementVlan": 1,

                        "portVlan": 1,

                        "managementAddress": "10.0.0.100",

                        "systemCapabilities": "switch"

                      },

                      "clientCount": 10,

                      "powerUsageInWh": 55.9,

                      "trafficInKbps": {

                        "total": 2.2,

                        "sent": 1.2,

                        "recv": 1

                      }

                    }

                  ]
              example: |-
                [

                  {

                    "portId": "1",

                    "enabled": true,

                    "status": "Connected",

                    "errors": [

                      "PoE overload",

                      "Very high proportion of CRC errors"

                    ],

                    "warnings": [

                      "PoE port was denied power",

                      "High proportion of CRC errors"

                    ],

                    "speed": "10 Gbps",

                    "duplex": "full",

                    "usageInKb": {

                      "total": 40867,

                      "sent": 23008,

                      "recv": 17859

                    },

                    "cdp": {

                      "systemName": "",

                      "platform": "MS350-24X",

                      "deviceId": "0c8ddbddee:ff",

                      "portId": "Port 20",

                      "nativeVlan": 1,

                      "address": "10.0,0.1",

                      "managementAddress": "10.0.0.100",

                      "version": "1",

                      "vtpManagementDomain": "",

                      "capabilities": "Switch"

                    },

                    "lldp": {

                      "systemName": "MS350-24X - Test",

                      "systemDescription": "MS350-24X Cloud Managed PoE Switch",

                      "portId": "20",

                      "portDescription": "Port 20",

                      "chassisId": "0c:8d:db:dd:ee:ff",

                      "managementVlan": 1,

                      "portVlan": 1,

                      "managementAddress": "10.0.0.100",

                      "systemCapabilities": "switch"

                    },

                    "clientCount": 10,

                    "powerUsageInWh": 55.9,

                    "trafficInKbps": {

                      "total": 2.2,

                      "sent": 1.2,

                      "recv": 1

                    }

                  }

                ]
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/devices/{serial}/switchPortStatuses/packets":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Switch ports
      summary: getDeviceSwitchPortStatusesPackets
      description: Returns the packet counters for all the ports of a switch.
      operationId: getDeviceSwitchPortStatusesPackets
      parameters:
        - name: serial
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: t0
          in: query
          description: The beginning of the timespan for the data. The maximum lookback period is 1 day from today.
          style: form
          explode: true
          schema:
            type: string
        - name: timespan
          in: query
          description: "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 1 day. The default is 1 day."
          style: form
          explode: true
          schema:
            type: number
            format: double
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "portId": "1",

                      "packets": [

                        {

                          "desc": "Total",

                          "total": 112081,

                          "sent": 104135,

                          "recv": 7946,

                          "ratePerSec": {

                            "total": 1,

                            "sent": 1,

                            "recv": 0

                          }

                        },

                        {

                          "desc": "Broadcast",

                          "total": 30884,

                          "sent": 30370,

                          "recv": 514,

                          "ratePerSec": {

                            "total": 0,

                            "sent": 0,

                            "recv": 0

                          }

                        },

                        {

                          "desc": "Multicast",

                          "total": 67620,

                          "sent": 66849,

                          "recv": 771,

                          "ratePerSec": {

                            "total": 0,

                            "sent": 0,

                            "recv": 0

                          }

                        },

                        {

                          "desc": "CRC align errors",

                          "total": 0,

                          "sent": 0,

                          "recv": 0,

                          "ratePerSec": {

                            "total": 0,

                            "sent": 0,

                            "recv": 0

                          }

                        }

                      ]

                    }

                  ]
              example: |-
                [

                  {

                    "portId": "1",

                    "packets": [

                      {

                        "desc": "Total",

                        "total": 112081,

                        "sent": 104135,

                        "recv": 7946,

                        "ratePerSec": {

                          "total": 1,

                          "sent": 1,

                          "recv": 0

                        }

                      },

                      {

                        "desc": "Broadcast",

                        "total": 30884,

                        "sent": 30370,

                        "recv": 514,

                        "ratePerSec": {

                          "total": 0,

                          "sent": 0,

                          "recv": 0

                        }

                      },

                      {

                        "desc": "Multicast",

                        "total": 67620,

                        "sent": 66849,

                        "recv": 771,

                        "ratePerSec": {

                          "total": 0,

                          "sent": 0,

                          "recv": 0

                        }

                      },

                      {

                        "desc": "CRC align errors",

                        "total": 0,

                        "sent": 0,

                        "recv": 0,

                        "ratePerSec": {

                          "total": 0,

                          "sent": 0,

                          "recv": 0

                        }

                      }

                    ]

                  }

                ]
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/switch/settings":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Switch settings
      summary: getNetworkSwitchSettings
      description: Returns the switch network settings.
      operationId: getNetworkSwitchSettings
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "vlan": 100,

                    "useCombinedPower": false,

                    "powerExceptions": [

                      {

                        "serial": "Q234-ABCD-0001",

                        "powerType": "redundant"

                      },

                      {

                        "serial": "Q234-ABCD-0002",

                        "powerType": "combined"

                      },

                      {

                        "serial": "Q234-ABCD-0003",

                        "powerType": "redundant"

                      },

                      {

                        "serial": "Q234-ABCD-0004",

                        "powerType": "useNetworkSetting"

                      }

                    ]

                  }
              example: |-
                {

                  "vlan": 100,

                  "useCombinedPower": false,

                  "powerExceptions": [

                    {

                      "serial": "Q234-ABCD-0001",

                      "powerType": "redundant"

                    },

                    {

                      "serial": "Q234-ABCD-0002",

                      "powerType": "combined"

                    },

                    {

                      "serial": "Q234-ABCD-0003",

                      "powerType": "redundant"

                    },

                    {

                      "serial": "Q234-ABCD-0004",

                      "powerType": "useNetworkSetting"

                    }

                  ]

                }
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/switch/settings/dscpToCosMappings":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Switch settings
      summary: getNetworkSwitchSettingsDscpToCosMappings
      description: Returns the DSCP to CoS mappings.
      operationId: getNetworkSwitchSettingsDscpToCosMappings
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "mappings": [

                      {

                        "dscp": 1,

                        "cos": 1,

                        "title": "Video"

                      }

                    ]

                  }
              example: |-
                {

                  "mappings": [

                    {

                      "dscp": 1,

                      "cos": 1,

                      "title": "Video"

                    }

                  ]

                }
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/switch/settings/mtu":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Switch settings
      summary: getNetworkSwitchSettingsMtu
      description: Returns the MTU configuration.
      operationId: getNetworkSwitchSettingsMtu
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "defaultMtuSize": 9578,

                    "overrides": [

                      {

                        "switches": [

                          "Q234-ABCD-0001",

                          "Q234-ABCD-0002",

                          "Q234-ABCD-0003"

                        ],

                        "mtuSize": 1500

                      },

                      {

                        "switchProfiles": [

                          "1284392014819",

                          "2983092129865"

                        ],

                        "mtuSize": 1600

                      }

                    ]

                  }
              example: |-
                {

                  "defaultMtuSize": 9578,

                  "overrides": [

                    {

                      "switches": [

                        "Q234-ABCD-0001",

                        "Q234-ABCD-0002",

                        "Q234-ABCD-0003"

                      ],

                      "mtuSize": 1500

                    },

                    {

                      "switchProfiles": [

                        "1284392014819",

                        "2983092129865"

                      ],

                      "mtuSize": 1600

                    }

                  ]

                }
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/switch/settings/qosRules":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Switch settings
      summary: getNetworkSwitchSettingsQosRules
      description: Lists quality of service rules.
      operationId: getNetworkSwitchSettingsQosRules
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "id": "1284392014819",

                      "vlan": 100,

                      "protocol": "TCP",

                      "srcPort": 2000,

                      "srcPortRange": null,

                      "dstPort": null,

                      "dstPortRange": "3000-3100",

                      "dscp": 0

                    }

                  ]
              example: |-
                [

                  {

                    "id": "1284392014819",

                    "vlan": 100,

                    "protocol": "TCP",

                    "srcPort": 2000,

                    "srcPortRange": null,

                    "dstPort": null,

                    "dstPortRange": "3000-3100",

                    "dscp": 0

                  }

                ]
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/switch/settings/qosRules/{qosRuleId}":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Switch settings
      summary: getNetworkSwitchSettingsQosRule
      description: Returns a quality of service rule.
      operationId: getNetworkSwitchSettingsQosRule
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: qosRuleId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "id": "1284392014819",

                    "vlan": 100,

                    "protocol": "TCP",

                    "srcPort": 2000,

                    "srcPortRange": null,

                    "dstPort": null,

                    "dstPortRange": "3000-3100",

                    "dscp": 0

                  }
              example: |-
                {

                  "id": "1284392014819",

                  "vlan": 100,

                  "protocol": "TCP",

                  "srcPort": 2000,

                  "srcPortRange": null,

                  "dstPort": null,

                  "dstPortRange": "3000-3100",

                  "dscp": 0

                }
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/switch/settings/qosRules/order":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Switch settings
      summary: getNetworkSwitchSettingsQosRulesOrder
      description: Returns the quality of service rule IDs by order in which they will be processed by the switch.
      operationId: getNetworkSwitchSettingsQosRulesOrder
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "ruleIds": [

                      "1284392014819",

                      "2983092129865"

                    ]

                  }
              example: |-
                {

                  "ruleIds": [

                    "1284392014819",

                    "2983092129865"

                  ]

                }
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/switch/settings/stormControl":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Switch settings
      summary: getNetworkSwitchSettingsStormControl
      description: Returns the storm control configuration for a switch network.
      operationId: getNetworkSwitchSettingsStormControl
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "broadcastThreshold": 30,

                    "multicastThreshold": 30,

                    "unknownUnicastThreshold": 30

                  }
              example: |-
                {

                  "broadcastThreshold": 30,

                  "multicastThreshold": 30,

                  "unknownUnicastThreshold": 30

                }
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/switch/settings/stp":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Switch settings
      summary: getNetworkSwitchSettingsStp
      description: Returns STP settings.
      operationId: getNetworkSwitchSettingsStp
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "rstpEnabled": true,

                    "stpBridgePriority": [

                      {

                        "switches": [

                          "Q234-ABCD-0001",

                          "Q234-ABCD-0002",

                          "Q234-ABCD-0003"

                        ],

                        "stpPriority": 4096

                      },

                      {

                        "stacks": [

                          "789102",

                          "123456",

                          "129102"

                        ],

                        "stpPriority": 28672

                      }

                    ]

                  }
              example: |-
                {

                  "rstpEnabled": true,

                  "stpBridgePriority": [

                    {

                      "switches": [

                        "Q234-ABCD-0001",

                        "Q234-ABCD-0002",

                        "Q234-ABCD-0003"

                      ],

                      "stpPriority": 4096

                    },

                    {

                      "stacks": [

                        "789102",

                        "123456",

                        "129102"

                      ],

                      "stpPriority": 28672

                    }

                  ]

                }
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/switch/settings/dhcpServerPolicy":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Switch settings
      summary: getNetworkSwitchSettingsDhcpServerPolicy
      description: Returns the DHCP server policy.
      operationId: getNetworkSwitchSettingsDhcpServerPolicy
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "defaultPolicy": "block",

                    "allowedServers": [

                      "00:50:56:00:00:01",

                      "00:50:56:00:00:02"

                    ]

                  }
              example: |-
                {

                  "defaultPolicy": "block",

                  "allowedServers": [

                    "00:50:56:00:00:01",

                    "00:50:56:00:00:02"

                  ]

                }
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/switch/settings/multicast":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Switch settings
      summary: getNetworkSwitchSettingsMulticast
      description: Returns multicast settings for a network.
      operationId: getNetworkSwitchSettingsMulticast
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "defaultSettings": {

                      "igmpSnoopingEnabled": true,

                      "floodUnknownMulticastTrafficEnabled": true

                    },

                    "overrides": [

                      {

                        "switches": [

                          "Q234-ABCD-0001",

                          "Q234-ABCD-0002",

                          "Q234-ABCD-0003"

                        ],

                        "igmpSnoopingEnabled": true,

                        "floodUnknownMulticastTrafficEnabled": true

                      },

                      {

                        "stacks": [

                          "789102",

                          "123456",

                          "129102"

                        ],

                        "igmpSnoopingEnabled": true,

                        "floodUnknownMulticastTrafficEnabled": true

                      }

                    ]

                  }
              example: |-
                {

                  "defaultSettings": {

                    "igmpSnoopingEnabled": true,

                    "floodUnknownMulticastTrafficEnabled": true

                  },

                  "overrides": [

                    {

                      "switches": [

                        "Q234-ABCD-0001",

                        "Q234-ABCD-0002",

                        "Q234-ABCD-0003"

                      ],

                      "igmpSnoopingEnabled": true,

                      "floodUnknownMulticastTrafficEnabled": true

                    },

                    {

                      "stacks": [

                        "789102",

                        "123456",

                        "129102"

                      ],

                      "igmpSnoopingEnabled": true,

                      "floodUnknownMulticastTrafficEnabled": true

                    }

                  ]

                }
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/switchStacks":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"  
    get:
      tags:
        - Switch stacks
      summary: getNetworkSwitchStacks
      description: Lists the switch stacks in a network.
      operationId: getNetworkSwitchStacks
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "id": "8473",

                      "name": "A cool stack",

                      "serials": [

                        "QBZY-XWVU-TSRQ",

                        "QBAB-CDEF-GHIJ"

                      ]

                    }

                  ]
              example: |-
                [

                  {

                    "id": "8473",

                    "name": "A cool stack",

                    "serials": [

                      "QBZY-XWVU-TSRQ",

                      "QBAB-CDEF-GHIJ"

                    ]

                  }

                ]
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/switchStacks/{switchStackId}":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Switch stacks
      summary: getNetworkSwitchStack
      description: Shows a switch stack.
      operationId: getNetworkSwitchStack
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: switchStackId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "id": "8473",

                    "name": "A cool stack",

                    "serials": [

                      "QBZY-XWVU-TSRQ",

                      "QBAB-CDEF-GHIJ"

                    ]

                  }
              example: |-
                {

                  "id": "8473",

                  "name": "A cool stack",

                  "serials": [

                    "QBZY-XWVU-TSRQ",

                    "QBAB-CDEF-GHIJ"

                  ]

                }
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/trafficShaping":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Traffic shaping
      summary: getNetworkTrafficShaping
      description: Displays the traffic shaping settings for an MX network.
      operationId: getNetworkTrafficShaping
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "defaultRulesEnabled": true,

                    "rules": [

                      {

                        "definitions": [

                          {

                            "type": "host",

                            "value": "google.com"

                          },

                          {

                            "type": "port",

                            "value": "9090"

                          },

                          {

                            "type": "ipRange",

                            "value": "192.1.0.0"

                          },

                          {

                            "type": "ipRange",

                            "value": "192.1.0.0/16"

                          },

                          {

                            "type": "ipRange",

                            "value": "10.1.0.0/16:80"

                          },

                          {

                            "type": "localNet",

                            "value": "192.168.0.0/16"

                          },

                          {

                            "type": "applicationCategory",

                            "value": {

                              "id": "meraki:layer7/category/2",

                              "name": "Blogging"

                            }

                          },

                          {

                            "type": "application",

                            "value": {

                              "id": "meraki:layer7/application/133",

                              "name": "Battle.net"

                            }

                          }

                        ],

                        "perClientBandwidthLimits": {

                          "settings": "custom",

                          "bandwidthLimits": {

                            "limitUp": 1000000,

                            "limitDown": 1000000

                          }

                        },

                        "dscpTagValue": null,

                        "priority": "normal"

                      }

                    ]

                  }
              example: |-
                {

                  "defaultRulesEnabled": true,

                  "rules": [

                    {

                      "definitions": [

                        {

                          "type": "host",

                          "value": "google.com"

                        },

                        {

                          "type": "port",

                          "value": "9090"

                        },

                        {

                          "type": "ipRange",

                          "value": "192.1.0.0"

                        },

                        {

                          "type": "ipRange",

                          "value": "192.1.0.0/16"

                        },

                        {

                          "type": "ipRange",

                          "value": "10.1.0.0/16:80"

                        },

                        {

                          "type": "localNet",

                          "value": "192.168.0.0/16"

                        },

                        {

                          "type": "applicationCategory",

                          "value": {

                            "id": "meraki:layer7/category/2",

                            "name": "Blogging"

                          }

                        },

                        {

                          "type": "application",

                          "value": {

                            "id": "meraki:layer7/application/133",

                            "name": "Battle.net"

                          }

                        }

                      ],

                      "perClientBandwidthLimits": {

                        "settings": "custom",

                        "bandwidthLimits": {

                          "limitUp": 1000000,

                          "limitDown": 1000000

                        }

                      },

                      "dscpTagValue": null,

                      "priority": "normal"

                    }

                  ]

                }
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/trafficShaping/dscpTaggingOptions":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Traffic shaping
      summary: getNetworkTrafficShapingDscpTaggingOptions
      description: Returns the available DSCP tagging options for your traffic shaping rules.
      operationId: getNetworkTrafficShapingDscpTaggingOptions
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "dscpTagValue": 10,

                      "description": "AF11 - High Throughput, Latency Insensitive, Low Drop"

                    },

                    {

                      "dscpTagValue": 12,

                      "description": "AF12 - High Throughput, Latency Insensitive, Medium Drop"

                    },

                    {

                      "dscpTagValue": 14,

                      "description": "AF13 - High Throughput, Latency Insensitive, High Drop"

                    },

                    {

                      "dscpTagValue": 18,

                      "description": "AF21 - Low Latency Data, Low Drop"

                    }

                  ]
              example: |-
                [

                  {

                    "dscpTagValue": 10,

                    "description": "AF11 - High Throughput, Latency Insensitive, Low Drop"

                  },

                  {

                    "dscpTagValue": 12,

                    "description": "AF12 - High Throughput, Latency Insensitive, Medium Drop"

                  },

                  {

                    "dscpTagValue": 14,

                    "description": "AF13 - High Throughput, Latency Insensitive, High Drop"

                  },

                  {

                    "dscpTagValue": 18,

                    "description": "AF21 - Low Latency Data, Low Drop"

                  }

                ]
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/trafficShaping/applicationCategories":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Traffic shaping
      summary: getNetworkTrafficShapingApplicationCategories
      description: Returns the application categories for traffic shaping rules.
      operationId: getNetworkTrafficShapingApplicationCategories
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "applicationCategories": [

                        {

                          "id": "meraki:layer7/category/24",

                          "name": "Advertising",

                          "applications": [

                            {

                              "id": "meraki:layer7/application/5",

                              "name": "Advertising.com"

                            },

                            {

                              "id": "meraki:layer7/application/0",

                              "name": "AppNexus"

                            },

                            {

                              "id": "meraki:layer7/application/1",

                              "name": "Brightroll"

                            }

                          ]

                        }

                      ]

                    }

                  ]
              example: |-
                [

                  {

                    "applicationCategories": [

                      {

                        "id": "meraki:layer7/category/24",

                        "name": "Advertising",

                        "applications": [

                          {

                            "id": "meraki:layer7/application/5",

                            "name": "Advertising.com"

                          },

                          {

                            "id": "meraki:layer7/application/0",

                            "name": "AppNexus"

                          },

                          {

                            "id": "meraki:layer7/application/1",

                            "name": "Brightroll"

                          }

                        ]

                      }

                    ]

                  }

                ]
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/uplinkSettings":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Uplink settings
      summary: getNetworkUplinkSettings
      description: Returns the uplink settings for your MX network.
      operationId: getNetworkUplinkSettings
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "bandwidthLimits": {

                      "wan1": {

                        "limitUp": 1000000,

                        "limitDown": 1000000

                      },

                      "wan2": {

                        "limitUp": 1000000,

                        "limitDown": 1000000

                      },

                      "cellular": {

                        "limitUp": 51200,

                        "limitDown": 51200

                      }

                    }

                  }
              example: |-
                {

                  "bandwidthLimits": {

                    "wan1": {

                      "limitUp": 1000000,

                      "limitDown": 1000000

                    },

                    "wan2": {

                      "limitUp": 1000000,

                      "limitDown": 1000000

                    },

                    "cellular": {

                      "limitUp": 51200,

                      "limitDown": 51200

                    }

                  }

                }
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/vlans/{vlanId}":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - VLANs
      summary: getNetworkVlan
      description: Returns a VLAN.
      operationId: getNetworkVlan
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: vlanId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "id": "1234",

                    "networkId": "N_24329156",

                    "name": "My VLAN",

                    "applianceIp": "192.168.1.1",

                    "subnet": "192.168.1.0/24",

                    "groupPolicyId": "101",

                    "fixedIpAssignments": {

                      "22:33:44:55:66:77": {

                        "ip": "1.2.3.4",

                        "name": "Some client name"

                      }

                    },

                    "reservedIpRanges": [

                      {

                        "start": "192.168.1.0",

                        "end": "192.168.1.1",

                        "comment": "A reserved IP range"

                      }

                    ],

                    "dnsNameservers": "google_dns",

                    "dhcpHandling": "Run a DHCP server",

                    "dhcpLeaseTime": "1 day",

                    "dhcpBootOptionsEnabled": false,

                    "dhcpBootNextServer": null,

                    "dhcpBootFilename": null,

                    "dhcpOptions": [

                      {

                        "code": 5,

                        "type": "text",

                        "value": "five"

                      }

                    ]

                  }
              example: |-
                {

                  "id": "1234",

                  "networkId": "N_24329156",

                  "name": "My VLAN",

                  "applianceIp": "192.168.1.1",

                  "subnet": "192.168.1.0/24",

                  "groupPolicyId": "101",

                  "fixedIpAssignments": {

                    "22:33:44:55:66:77": {

                      "ip": "1.2.3.4",

                      "name": "Some client name"

                    }

                  },

                  "reservedIpRanges": [

                    {

                      "start": "192.168.1.0",

                      "end": "192.168.1.1",

                      "comment": "A reserved IP range"

                    }

                  ],

                  "dnsNameservers": "google_dns",

                  "dhcpHandling": "Run a DHCP server",

                  "dhcpLeaseTime": "1 day",

                  "dhcpBootOptionsEnabled": false,

                  "dhcpBootNextServer": null,

                  "dhcpBootFilename": null,

                  "dhcpOptions": [

                    {

                      "code": 5,

                      "type": "text",

                      "value": "five"

                    }

                  ]

                }
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/vlans":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - VLANs
      summary: getNetworkVlans
      description: Lists the VLANs for an MX network.
      operationId: getNetworkVlans
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "id": "1234",

                      "networkId": "N_24329156",

                      "name": "My VLAN",

                      "applianceIp": "192.168.1.1",

                      "subnet": "192.168.1.0/24",

                      "groupPolicyId": "101",

                      "fixedIpAssignments": {

                        "22:33:44:55:66:77": {

                          "ip": "1.2.3.4",

                          "name": "Some client name"

                        }

                      },

                      "reservedIpRanges": [

                        {

                          "start": "192.168.1.0",

                          "end": "192.168.1.1",

                          "comment": "A reserved IP range"

                        }

                      ],

                      "dnsNameservers": "google_dns",

                      "dhcpHandling": "Run a DHCP server",

                      "dhcpLeaseTime": "1 day",

                      "dhcpBootOptionsEnabled": false,

                      "dhcpBootNextServer": null,

                      "dhcpBootFilename": null,

                      "dhcpOptions": [

                        {

                          "code": 5,

                          "type": "text",

                          "value": "five"

                        }

                      ]

                    }

                  ]
              example: |-
                [

                  {

                    "id": "1234",

                    "networkId": "N_24329156",

                    "name": "My VLAN",

                    "applianceIp": "192.168.1.1",

                    "subnet": "192.168.1.0/24",

                    "groupPolicyId": "101",

                    "fixedIpAssignments": {

                      "22:33:44:55:66:77": {

                        "ip": "1.2.3.4",

                        "name": "Some client name"

                      }

                    },

                    "reservedIpRanges": [

                      {

                        "start": "192.168.1.0",

                        "end": "192.168.1.1",

                        "comment": "A reserved IP range"

                      }

                    ],

                    "dnsNameservers": "google_dns",

                    "dhcpHandling": "Run a DHCP server",

                    "dhcpLeaseTime": "1 day",

                    "dhcpBootOptionsEnabled": false,

                    "dhcpBootNextServer": null,

                    "dhcpBootFilename": null,

                    "dhcpOptions": [

                      {

                        "code": 5,

                        "type": "text",

                        "value": "five"

                      }

                    ]

                  }

                ]
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/vlansEnabledState":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - VLANs
      summary: getNetworkVlansEnabledState
      description: Returns the enabled status of VLANs for the network.
      operationId: getNetworkVlansEnabledState
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "enabled": true,

                    "networkId": "N_24329156"

                  }
              example: |-
                {

                  "enabled": true,

                  "networkId": "N_24329156"

                }
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/devices/{serial}/connectionStats":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Wireless health
      summary: getNetworkDeviceConnectionStats
      description: Aggregated connectivity info for a given AP on this network.
      operationId: getNetworkDeviceConnectionStats
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: serial
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: t0
          in: query
          description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
          style: form
          explode: true
          schema:
            type: string
        - name: t1
          in: query
          description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
          style: form
          explode: true
          schema:
            type: string
        - name: timespan
          in: query
          description: "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
          style: form
          explode: true
          schema:
            type: number
            format: double
        - name: band
          in: query
          description: "Filter results by band (either '2.4' or '5'). Note that data prior to February 2020 will not have band information."
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/band"
        - name: ssid
          in: query
          description: Filter results by SSID
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: vlan
          in: query
          description: Filter results by VLAN
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: apTag
          in: query
          description: Filter results by AP Tag
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "serial": "Q2JC-2MJM-FHRD",

                    "connectionStats": {

                      "assoc": 0,

                      "auth": 1,

                      "dhcp": 0,

                      "dns": 0,

                      "success": 43

                    }

                  }
              example: |-
                {

                  "serial": "Q2JC-2MJM-FHRD",

                  "connectionStats": {

                    "assoc": 0,

                    "auth": 1,

                    "dhcp": 0,

                    "dns": 0,

                    "success": 43

                  }

                }
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/clients/{clientId}/latencyStats":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Wireless health
      summary: getNetworkClientLatencyStats
      description: Aggregated latency info for a given client on this network. Clients are identified by their MAC.
      operationId: getNetworkClientLatencyStats
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: clientId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: t0
          in: query
          description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
          style: form
          explode: true
          schema:
            type: string
        - name: t1
          in: query
          description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
          style: form
          explode: true
          schema:
            type: string
        - name: timespan
          in: query
          description: "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
          style: form
          explode: true
          schema:
            type: number
            format: double
        - name: band
          in: query
          description: "Filter results by band (either '2.4' or '5'). Note that data prior to February 2020 will not have band information."
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/band"
        - name: ssid
          in: query
          description: Filter results by SSID
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: vlan
          in: query
          description: Filter results by VLAN
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: apTag
          in: query
          description: Filter results by AP Tag
          style: form
          explode: true
          schema:
            type: string
        - name: fields
          in: query
          description: 'Partial selection: If present, this call will return only the selected fields of ["rawDistribution", "avg"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.'
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "mac": "00:61:71:c8:51:27",

                    "latencyStats": {

                      "backgroundTraffic": {

                        "rawDistribution": {

                          "0": 1234,

                          "1": 2345,

                          "2": 3456,

                          "4": 4567,

                          "8": 5678,

                          "16": 6789,

                          "32": 7890,

                          "64": 8901,

                          "128": 9012,

                          "256": 83,

                          "512": 1234,

                          "1024": 2345,

                          "2048": 9999

                        },

                        "avg": 606.52

                      },

                      "bestEffortTraffic": "same shape as backgroundTraffic",

                      "videoTraffic": "same shape as backgroundTraffic",

                      "voiceTraffic": "same shape as backgroundTraffic"

                    }

                  }
              example: |-
                {

                  "mac": "00:61:71:c8:51:27",

                  "latencyStats": {

                    "backgroundTraffic": {

                      "rawDistribution": {

                        "0": 1234,

                        "1": 2345,

                        "2": 3456,

                        "4": 4567,

                        "8": 5678,

                        "16": 6789,

                        "32": 7890,

                        "64": 8901,

                        "128": 9012,

                        "256": 83,

                        "512": 1234,

                        "1024": 2345,

                        "2048": 9999

                      },

                      "avg": 606.52

                    },

                    "bestEffortTraffic": "same shape as backgroundTraffic",

                    "videoTraffic": "same shape as backgroundTraffic",

                    "voiceTraffic": "same shape as backgroundTraffic"

                  }

                }
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/clients/{clientId}/connectionStats":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Wireless health
      summary: getNetworkClientConnectionStats
      description: Aggregated connectivity info for a given client on this network. Clients are identified by their MAC.
      operationId: getNetworkClientConnectionStats
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: clientId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: t0
          in: query
          description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
          style: form
          explode: true
          schema:
            type: string
        - name: t1
          in: query
          description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
          style: form
          explode: true
          schema:
            type: string
        - name: timespan
          in: query
          description: "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
          style: form
          explode: true
          schema:
            type: number
            format: double
        - name: band
          in: query
          description: "Filter results by band (either '2.4' or '5'). Note that data prior to February 2020 will not have band information."
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/band"
        - name: ssid
          in: query
          description: Filter results by SSID
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: vlan
          in: query
          description: Filter results by VLAN
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: apTag
          in: query
          description: Filter results by AP Tag
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "mac": "00:61:71:c8:51:27",

                    "connectionStats": {

                      "assoc": 0,

                      "auth": 4,

                      "dhcp": 0,

                      "dns": 0,

                      "success": 10

                    }

                  }
              example: |-
                {

                  "mac": "00:61:71:c8:51:27",

                  "connectionStats": {

                    "assoc": 0,

                    "auth": 4,

                    "dhcp": 0,

                    "dns": 0,

                    "success": 10

                  }

                }
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/connectionStats":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Wireless health
      summary: getNetworkConnectionStats
      description: Aggregated connectivity info for this network.
      operationId: getNetworkConnectionStats
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: t0
          in: query
          description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
          style: form
          explode: true
          schema:
            type: string
        - name: t1
          in: query
          description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
          style: form
          explode: true
          schema:
            type: string
        - name: timespan
          in: query
          description: "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
          style: form
          explode: true
          schema:
            type: number
            format: double
        - name: band
          in: query
          description: "Filter results by band (either '2.4' or '5'). Note that data prior to February 2020 will not have band information."
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/band"
        - name: ssid
          in: query
          description: Filter results by SSID
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: vlan
          in: query
          description: Filter results by VLAN
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: apTag
          in: query
          description: Filter results by AP Tag
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "assoc": 1,

                    "auth": 5,

                    "dhcp": 0,

                    "dns": 0,

                    "success": 51

                  }
              example: |-
                {

                  "assoc": 1,

                  "auth": 5,

                  "dhcp": 0,

                  "dns": 0,

                  "success": 51

                }
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/clients/latencyStats":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Wireless health
      summary: getNetworkClientsLatencyStats
      description: "Aggregated latency info for this network, grouped by client.s"
      operationId: getNetworkClientsLatencyStats
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: t0
          in: query
          description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
          style: form
          explode: true
          schema:
            type: string
        - name: t1
          in: query
          description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
          style: form
          explode: true
          schema:
            type: string
        - name: timespan
          in: query
          description: "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
          style: form
          explode: true
          schema:
            type: number
            format: double
        - name: band
          in: query
          description: "Filter results by band (either '2.4' or '5'). Note that data prior to February 2020 will not have band information."
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/band"
        - name: ssid
          in: query
          description: Filter results by SSID
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: vlan
          in: query
          description: Filter results by VLAN
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: apTag
          in: query
          description: Filter results by AP Tag
          style: form
          explode: true
          schema:
            type: string
        - name: fields
          in: query
          description: 'Partial selection: If present, this call will return only the selected fields of ["rawDistribution", "avg"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.'
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "mac": "00:61:71:c8:51:27",

                      "latencyStats": {

                        "backgroundTraffic": {

                          "rawDistribution": {

                            "0": 1234,

                            "1": 2345,

                            "2": 3456,

                            "4": 4567,

                            "8": 5678,

                            "16": 6789,

                            "32": 7890,

                            "64": 8901,

                            "128": 9012,

                            "256": 83,

                            "512": 1234,

                            "1024": 2345,

                            "2048": 9999

                          },

                          "avg": 606.52

                        },

                        "bestEffortTraffic": "same shape as backgroundTraffic",

                        "videoTraffic": "same shape as backgroundTraffic",

                        "voiceTraffic": "same shape as backgroundTraffic"

                      }

                    },

                    {

                      "mac": "1c:4d:70:7f:5e:5e",

                      "latencyStats": {

                        "backgroundTraffic": {

                          "rawDistribution": {

                            "0": 1234,

                            "1": 2345,

                            "2": 3456,

                            "4": 4567,

                            "8": 5678,

                            "16": 6789,

                            "32": 7890,

                            "64": 8901,

                            "128": 9012,

                            "256": 83,

                            "512": 1234,

                            "1024": 2345,

                            "2048": 9999

                          },

                          "avg": 606.52

                        },

                        "bestEffortTraffic": "same shape as backgroundTraffic",

                        "videoTraffic": "same shape as backgroundTraffic",

                        "voiceTraffic": "same shape as backgroundTraffic"

                      }

                    },

                    {

                      "mac": "1c:4d:70:81:8d:0a",

                      "latencyStats": {

                        "backgroundTraffic": {

                          "rawDistribution": {

                            "0": 1234,

                            "1": 2345,

                            "2": 3456,

                            "4": 4567,

                            "8": 5678,

                            "16": 6789,

                            "32": 7890,

                            "64": 8901,

                            "128": 9012,

                            "256": 83,

                            "512": 1234,

                            "1024": 2345,

                            "2048": 9999

                          },

                          "avg": 606.52

                        },

                        "bestEffortTraffic": "same shape as backgroundTraffic",

                        "videoTraffic": "same shape as backgroundTraffic",

                        "voiceTraffic": "same shape as backgroundTraffic"

                      }

                    }

                  ]
              example: |-
                [

                  {

                    "mac": "00:61:71:c8:51:27",

                    "latencyStats": {

                      "backgroundTraffic": {

                        "rawDistribution": {

                          "0": 1234,

                          "1": 2345,

                          "2": 3456,

                          "4": 4567,

                          "8": 5678,

                          "16": 6789,

                          "32": 7890,

                          "64": 8901,

                          "128": 9012,

                          "256": 83,

                          "512": 1234,

                          "1024": 2345,

                          "2048": 9999

                        },

                        "avg": 606.52

                      },

                      "bestEffortTraffic": "same shape as backgroundTraffic",

                      "videoTraffic": "same shape as backgroundTraffic",

                      "voiceTraffic": "same shape as backgroundTraffic"

                    }

                  },

                  {

                    "mac": "1c:4d:70:7f:5e:5e",

                    "latencyStats": {

                      "backgroundTraffic": {

                        "rawDistribution": {

                          "0": 1234,

                          "1": 2345,

                          "2": 3456,

                          "4": 4567,

                          "8": 5678,

                          "16": 6789,

                          "32": 7890,

                          "64": 8901,

                          "128": 9012,

                          "256": 83,

                          "512": 1234,

                          "1024": 2345,

                          "2048": 9999

                        },

                        "avg": 606.52

                      },

                      "bestEffortTraffic": "same shape as backgroundTraffic",

                      "videoTraffic": "same shape as backgroundTraffic",

                      "voiceTraffic": "same shape as backgroundTraffic"

                    }

                  },

                  {

                    "mac": "1c:4d:70:81:8d:0a",

                    "latencyStats": {

                      "backgroundTraffic": {

                        "rawDistribution": {

                          "0": 1234,

                          "1": 2345,

                          "2": 3456,

                          "4": 4567,

                          "8": 5678,

                          "16": 6789,

                          "32": 7890,

                          "64": 8901,

                          "128": 9012,

                          "256": 83,

                          "512": 1234,

                          "1024": 2345,

                          "2048": 9999

                        },

                        "avg": 606.52

                      },

                      "bestEffortTraffic": "same shape as backgroundTraffic",

                      "videoTraffic": "same shape as backgroundTraffic",

                      "voiceTraffic": "same shape as backgroundTraffic"

                    }

                  }

                ]
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/devices/connectionStats":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Wireless health
      summary: getNetworkDevicesConnectionStats
      description: "Aggregated connectivity info for this network, grouped by node."
      operationId: getNetworkDevicesConnectionStats
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: t0
          in: query
          description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
          style: form
          explode: true
          schema:
            type: string
        - name: t1
          in: query
          description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
          style: form
          explode: true
          schema:
            type: string
        - name: timespan
          in: query
          description: "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
          style: form
          explode: true
          schema:
            type: number
            format: double
        - name: band
          in: query
          description: "Filter results by band (either '2.4' or '5'). Note that data prior to February 2020 will not have band information."
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/band"
        - name: ssid
          in: query
          description: Filter results by SSID
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: vlan
          in: query
          description: Filter results by VLAN
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: apTag
          in: query
          description: Filter results by AP Tag
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "serial": "Q2JC-2MJM-FHRD",

                      "connectionStats": {

                        "assoc": 0,

                        "auth": 1,

                        "dhcp": 0,

                        "dns": 0,

                        "success": 43

                      }

                    },

                    {

                      "serial": "Q2FJ-3SHB-Y2K2",

                      "connectionStats": {

                        "assoc": 1,

                        "auth": 4,

                        "dhcp": 0,

                        "dns": 0,

                        "success": 8

                      }

                    }

                  ]
              example: |-
                [

                  {

                    "serial": "Q2JC-2MJM-FHRD",

                    "connectionStats": {

                      "assoc": 0,

                      "auth": 1,

                      "dhcp": 0,

                      "dns": 0,

                      "success": 43

                    }

                  },

                  {

                    "serial": "Q2FJ-3SHB-Y2K2",

                    "connectionStats": {

                      "assoc": 1,

                      "auth": 4,

                      "dhcp": 0,

                      "dns": 0,

                      "success": 8

                    }

                  }

                ]
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/clients/connectionStats":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Wireless health
      summary: getNetworkClientsConnectionStats
      description: "Aggregated connectivity info for this network, grouped by clients"
      operationId: getNetworkClientsConnectionStats
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: t0
          in: query
          description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
          style: form
          explode: true
          schema:
            type: string
        - name: t1
          in: query
          description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
          style: form
          explode: true
          schema:
            type: string
        - name: timespan
          in: query
          description: "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
          style: form
          explode: true
          schema:
            type: number
            format: double
        - name: band
          in: query
          description: "Filter results by band (either '2.4' or '5'). Note that data prior to February 2020 will not have band information."
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/band"
        - name: ssid
          in: query
          description: Filter results by SSID
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: vlan
          in: query
          description: Filter results by VLAN
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: apTag
          in: query
          description: Filter results by AP Tag
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "mac": "00:61:71:c8:51:27",

                      "connectionStats": {

                        "assoc": 0,

                        "auth": 4,

                        "dhcp": 0,

                        "dns": 0,

                        "success": 10

                      }

                    },

                    {

                      "mac": "1c:4d:70:7f:5e:5e",

                      "connectionStats": {

                        "assoc": 0,

                        "auth": 1,

                        "dhcp": 0,

                        "dns": 0,

                        "success": 24

                      }

                    },

                    {

                      "mac": "1c:4d:70:81:8d:0a",

                      "connectionStats": {

                        "assoc": 1,

                        "auth": 0,

                        "dhcp": 0,

                        "dns": 0,

                        "success": 16

                      }

                    }

                  ]
              example: |-
                [

                  {

                    "mac": "00:61:71:c8:51:27",

                    "connectionStats": {

                      "assoc": 0,

                      "auth": 4,

                      "dhcp": 0,

                      "dns": 0,

                      "success": 10

                    }

                  },

                  {

                    "mac": "1c:4d:70:7f:5e:5e",

                    "connectionStats": {

                      "assoc": 0,

                      "auth": 1,

                      "dhcp": 0,

                      "dns": 0,

                      "success": 24

                    }

                  },

                  {

                    "mac": "1c:4d:70:81:8d:0a",

                    "connectionStats": {

                      "assoc": 1,

                      "auth": 0,

                      "dhcp": 0,

                      "dns": 0,

                      "success": 16

                    }

                  }

                ]
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/latencyStats":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Wireless health
      summary: getNetworkLatencyStats
      description: Aggregated latency info for this network
      operationId: getNetworkLatencyStats
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: t0
          in: query
          description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
          style: form
          explode: true
          schema:
            type: string
        - name: t1
          in: query
          description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
          style: form
          explode: true
          schema:
            type: string
        - name: timespan
          in: query
          description: "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
          style: form
          explode: true
          schema:
            type: number
            format: double
        - name: band
          in: query
          description: "Filter results by band (either '2.4' or '5'). Note that data prior to February 2020 will not have band information."
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/band"
        - name: ssid
          in: query
          description: Filter results by SSID
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: vlan
          in: query
          description: Filter results by VLAN
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: apTag
          in: query
          description: Filter results by AP Tag
          style: form
          explode: true
          schema:
            type: string
        - name: fields
          in: query
          description: 'Partial selection: If present, this call will return only the selected fields of ["rawDistribution", "avg"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.'
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "backgroundTraffic": {

                      "rawDistribution": {

                        "0": 1234,

                        "1": 2345,

                        "2": 3456,

                        "4": 4567,

                        "8": 5678,

                        "16": 6789,

                        "32": 7890,

                        "64": 8901,

                        "128": 9012,

                        "256": 83,

                        "512": 1234,

                        "1024": 2345,

                        "2048": 9999

                      },

                      "avg": 606.52

                    },

                    "bestEffortTraffic": "same shape as backgroundTraffic",

                    "videoTraffic": "same shape as backgroundTraffic",

                    "voiceTraffic": "same shape as backgroundTraffic"

                  }
              example: |-
                {

                  "backgroundTraffic": {

                    "rawDistribution": {

                      "0": 1234,

                      "1": 2345,

                      "2": 3456,

                      "4": 4567,

                      "8": 5678,

                      "16": 6789,

                      "32": 7890,

                      "64": 8901,

                      "128": 9012,

                      "256": 83,

                      "512": 1234,

                      "1024": 2345,

                      "2048": 9999

                    },

                    "avg": 606.52

                  },

                  "bestEffortTraffic": "same shape as backgroundTraffic",

                  "videoTraffic": "same shape as backgroundTraffic",

                  "voiceTraffic": "same shape as backgroundTraffic"

                }
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/devices/latencyStats":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Wireless health
      summary: getNetworkDevicesLatencyStats
      description: "Aggregated latency info for this network, grouped by node"
      operationId: getNetworkDevicesLatencyStats
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: t0
          in: query
          description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
          style: form
          explode: true
          schema:
            type: string
        - name: t1
          in: query
          description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
          style: form
          explode: true
          schema:
            type: string
        - name: timespan
          in: query
          description: "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
          style: form
          explode: true
          schema:
            type: number
            format: double
        - name: band
          in: query
          description: "Filter results by band (either '2.4' or '5'). Note that data prior to February 2020 will not have band information."
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/band"
        - name: ssid
          in: query
          description: Filter results by SSID
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: vlan
          in: query
          description: Filter results by VLAN
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: apTag
          in: query
          description: Filter results by AP Tag
          style: form
          explode: true
          schema:
            type: string
        - name: fields
          in: query
          description: 'Partial selection: If present, this call will return only the selected fields of ["rawDistribution", "avg"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.'
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  [

                    {

                      "serial": "Q2JC-2MJM-FHRD",

                      "latencyStats": {

                        "backgroundTraffic": {

                          "rawDistribution": {

                            "0": 1234,

                            "1": 2345,

                            "2": 3456,

                            "4": 4567,

                            "8": 5678,

                            "16": 6789,

                            "32": 7890,

                            "64": 8901,

                            "128": 9012,

                            "256": 83,

                            "512": 1234,

                            "1024": 2345,

                            "2048": 9999

                          },

                          "avg": 606.52

                        },

                        "bestEffortTraffic": "same shape as backgroundTraffic",

                        "videoTraffic": "same shape as backgroundTraffic",

                        "voiceTraffic": "same shape as backgroundTraffic"

                      }

                    },

                    {

                      "serial": "Q2FJ-3SHB-Y2K2",

                      "latencyStats": {

                        "backgroundTraffic": {

                          "rawDistribution": {

                            "0": 1234,

                            "1": 2345,

                            "2": 3456,

                            "4": 4567,

                            "8": 5678,

                            "16": 6789,

                            "32": 7890,

                            "64": 8901,

                            "128": 9012,

                            "256": 83,

                            "512": 1234,

                            "1024": 2345,

                            "2048": 9999

                          },

                          "avg": 606.52

                        },

                        "bestEffortTraffic": "same shape as backgroundTraffic",

                        "videoTraffic": "same shape as backgroundTraffic",

                        "voiceTraffic": "same shape as backgroundTraffic"

                      }

                    }

                  ]
              example: |-
                [

                  {

                    "serial": "Q2JC-2MJM-FHRD",

                    "latencyStats": {

                      "backgroundTraffic": {

                        "rawDistribution": {

                          "0": 1234,

                          "1": 2345,

                          "2": 3456,

                          "4": 4567,

                          "8": 5678,

                          "16": 6789,

                          "32": 7890,

                          "64": 8901,

                          "128": 9012,

                          "256": 83,

                          "512": 1234,

                          "1024": 2345,

                          "2048": 9999

                        },

                        "avg": 606.52

                      },

                      "bestEffortTraffic": "same shape as backgroundTraffic",

                      "videoTraffic": "same shape as backgroundTraffic",

                      "voiceTraffic": "same shape as backgroundTraffic"

                    }

                  },

                  {

                    "serial": "Q2FJ-3SHB-Y2K2",

                    "latencyStats": {

                      "backgroundTraffic": {

                        "rawDistribution": {

                          "0": 1234,

                          "1": 2345,

                          "2": 3456,

                          "4": 4567,

                          "8": 5678,

                          "16": 6789,

                          "32": 7890,

                          "64": 8901,

                          "128": 9012,

                          "256": 83,

                          "512": 1234,

                          "1024": 2345,

                          "2048": 9999

                        },

                        "avg": 606.52

                      },

                      "bestEffortTraffic": "same shape as backgroundTraffic",

                      "videoTraffic": "same shape as backgroundTraffic",

                      "voiceTraffic": "same shape as backgroundTraffic"

                    }

                  }

                ]
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/devices/{serial}/latencyStats":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Wireless health
      summary: getNetworkDeviceLatencyStats
      description: Aggregated latency info for a given AP on this network
      operationId: getNetworkDeviceLatencyStats
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: serial
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: t0
          in: query
          description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
          style: form
          explode: true
          schema:
            type: string
        - name: t1
          in: query
          description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
          style: form
          explode: true
          schema:
            type: string
        - name: timespan
          in: query
          description: "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
          style: form
          explode: true
          schema:
            type: number
            format: double
        - name: band
          in: query
          description: "Filter results by band (either '2.4' or '5'). Note that data prior to February 2020 will not have band information."
          style: form
          explode: true
          schema:
            $ref: "#/components/schemas/band"
        - name: ssid
          in: query
          description: Filter results by SSID
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: vlan
          in: query
          description: Filter results by VLAN
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: apTag
          in: query
          description: Filter results by AP Tag
          style: form
          explode: true
          schema:
            type: string
        - name: fields
          in: query
          description: 'Partial selection: If present, this call will return only the selected fields of ["rawDistribution", "avg"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.'
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "serial": "Q2JC-2MJM-FHRD",

                    "latencyStats": {

                      "backgroundTraffic": {

                        "rawDistribution": {

                          "0": 1234,

                          "1": 2345,

                          "2": 3456,

                          "4": 4567,

                          "8": 5678,

                          "16": 6789,

                          "32": 7890,

                          "64": 8901,

                          "128": 9012,

                          "256": 83,

                          "512": 1234,

                          "1024": 2345,

                          "2048": 9999

                        },

                        "avg": 606.52

                      },

                      "bestEffortTraffic": "same shape as backgroundTraffic",

                      "videoTraffic": "same shape as backgroundTraffic",

                      "voiceTraffic": "same shape as backgroundTraffic"

                    }

                  }
              example: |-
                {

                  "serial": "Q2JC-2MJM-FHRD",

                  "latencyStats": {

                    "backgroundTraffic": {

                      "rawDistribution": {

                        "0": 1234,

                        "1": 2345,

                        "2": 3456,

                        "4": 4567,

                        "8": 5678,

                        "16": 6789,

                        "32": 7890,

                        "64": 8901,

                        "128": 9012,

                        "256": 83,

                        "512": 1234,

                        "1024": 2345,

                        "2048": 9999

                      },

                      "avg": 606.52

                    },

                    "bestEffortTraffic": "same shape as backgroundTraffic",

                    "videoTraffic": "same shape as backgroundTraffic",

                    "voiceTraffic": "same shape as backgroundTraffic"

                  }

                }
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
  "/networks/{networkId}/wireless/settings":
    parameters:
      - name: api-version
        in: header
        schema:
          type: string
          default: ""
        description: "If not specified then the latest version is selected"
    get:
      tags:
        - Wireless settings
      summary: getNetworkWirelessSettings
      description: Return the wireless settings for a network
      operationId: getNetworkWirelessSettings
      parameters:
        - name: networkId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: |-
                  {

                    "meshingEnabled": true,

                    "ipv6BridgeEnabled": false,

                    "locationAnalyticsEnabled": false

                  }
              example: |-
                {

                  "meshingEnabled": true,

                  "ipv6BridgeEnabled": false,

                  "locationAnalyticsEnabled": false

                }
        404:
          $ref: "#/components/responses/not_found"
        403:
          $ref: "#/components/responses/forbidden"
        401:
          $ref: "#/components/responses/unauthorized"
        400:
          $ref: "#/components/responses/bad_request"
        429:
          $ref: "#/components/responses/too_many"
        500:
          $ref: "#/components/responses/server_error"
        503:
          $ref: "#/components/responses/service_unavailable"
      deprecated: false
      
components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://api-prd.kpn.com/oauth/client_credential/accesstoken?grant_type=client_credentials
          scopes: {}

  schemas:
    band:
      title: band
      type: string
      enum:
      - "2.4"
      - "5"
    objectType:
      title: objectType
      type: string
      enum:
      - person
      - vehicle
    uplink:
      title: uplink
      type: string
      enum:
      - wan1
      - wan2
      - cellular
    ssidNumber:
      title: ssidNumber
      type: integer
      example: 0
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      - 11
      - 12
      - 13
      - 14
    error:
      type: object
      properties:
        transactionId:
          type: string
          description: transaction id of the the request
          title: Transaction ID
        status:
          type: string
          description: Status
          title: Status
        name:
          type: string
          description: Error name
          title: Error name
        message:
          type: string
          description: Error message
          title: Error message
        info:
          type: string
          description: Additional information about error
          title: Info

  responses:
    bad_request:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
    found:
      description: Found
      # headers:
      #   Location:
      #     description: Location information
      #     schema:
      #       type: string
      # content:
      #   application/json:
      #     schema:
      #       $ref: '#/components/schemas/error'
    unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
    forbidden:
      description: forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
    not_found:
      description: not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
    too_many:
      description: too many requests
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
    server_error:
      description: server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"

    gateway_error:
      description: gateway_error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"

    service_unavailable:
      description: service unavailable
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
    empty_file:
      description: uploaded file has size 0
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
    precondition_required:
      description: precondition required
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"

security:
  - oauth2: []

tags:
  - name: Bluetooth clients
  - name: Bluetooth settings
  - name: Camera quality retention profiles
  - name: Cameras
  - name: Clients
  - name: Content filtering categories
  - name: Content filtering rules
  - name: Devices
  - name: Events
  - name: Firewalled services
  - name: Floorplans
  - name: Group policies
  - name: HTTP servers
  - name: Intrusion settings
  - name: Link aggregations
  - name: MG DHCP settings
  - name: MG LAN settings
  - name: MG connectivity monitoring destinations
  - name: MG port forwarding rules
  - name: MG subnet pool settings
  - name: MG uplink settings
  - name: MR L3 firewall
  - name: MV Sense
  - name: "MX 1:1 NAT rules"
  - name: "MX 1:Many NAT rules"
  - name: MX L3 firewall
  - name: MX L7 application categories
  - name: MX L7 firewall
  - name: MX VLAN ports
  - name: MX VPN firewall
  - name: MX cellular firewall
  - name: MX inbound firewall
  - name: MX port forwarding rules
  - name: MX static routes
  - name: MX warm spare settings
  - name: Malware settings
  - name: Management interface settings
  - name: Meraki auth users
  - name: NetFlow settings
  - name: Networks
  - name: Organizations
  - name: Radio settings
  - name: SNMP settings
  - name: SSIDs
  - name: Security events
  - name: Splash login attempts
  - name: Splash settings
  - name: Switch ACLs
  - name: Switch port schedules
  - name: Switch ports
  - name: Switch settings
  - name: Switch stacks
  - name: Traffic shaping
  - name: Uplink settings
  - name: VLANs
  - name: Wireless health
  - name: Wireless settings